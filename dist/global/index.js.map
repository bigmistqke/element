{"version":3,"file":"index.js","mappings":"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","sources":["webpack://LUME/../variable/node_modules/lowclass/src/native.ts","webpack://LUME/../variable/node_modules/lowclass/src/utils.ts","webpack://LUME/webpack/bootstrap","webpack://LUME/webpack/runtime/define property getters","webpack://LUME/webpack/runtime/hasOwnProperty shorthand","webpack://LUME/webpack/runtime/make namespace object","webpack://LUME/./node_modules/solid-js/dist/solid.js","webpack://LUME/./node_modules/solid-js/web/dist/web.js","webpack://LUME/./src/_utils.ts","webpack://LUME/./src/LumeElement.ts","webpack://LUME/../variable/node_modules/lowclass/src/Class.ts","webpack://LUME/../variable/node_modules/lowclass/src/multiple.ts","webpack://LUME/../variable/node_modules/solid-js/dist/solid.js","webpack://LUME/../variable/src/index.ts","webpack://LUME/./src/attribute.ts","webpack://LUME/./src/element.ts","webpack://LUME/./src/css.ts","webpack://LUME/./src/index.ts"],"sourcesContent":["// borrowed from (and slightly modified) https://github.com/Mr0grog/newless\n// The newless license is BSD 3:\n\n// TODO no any types\n\n/*\n * Copyright (c) 2013-2016, Rob Brackett\n * Copyright (c) 2018, Joseph Orbegoso Pea\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {getFunctionBody, setDescriptor, Constructor} from './utils.js'\n\nexport {newless as native}\n\nexport default newless\n\nvar supportsSpread = isSyntaxSupported('Object(...[{}])')\nvar supportsClass = isSyntaxSupported('class Test {}')\nvar supportsNewTarget = isSyntaxSupported('new.target')\n\n// Used to track the original wrapped constructor on a newless instance\nvar TRUE_CONSTRUCTOR = Symbol ? Symbol('trueConstructor') : '__newlessTrueConstructor__'\n\nvar setPrototype =\n\tObject.setPrototypeOf ||\n\tfunction setPrototypeOf(object, newPrototype) {\n\t\tobject.__proto__ = newPrototype\n\t}\n\n// Polyfill for Reflect.construct\nvar construct =\n\t(Reflect && Reflect.construct) ||\n\t(function () {\n\t\tif (supportsClass) {\n\t\t\treturn Function(\n\t\t\t\t'constructor, args, target',\n\t\t\t\t`\n                'use strict';\n\n                if (arguments.length === 3 && typeof target !== 'function')\n                    throw new TypeError(target + ' is not a constructor');\n\n                target = target || constructor;\n\n                // extend target so the right prototype is constructed (or nearly the\n                // right one; ideally we'd do instantiator.prototype = target.prototype,\n                // but a class's prototype property is not writable)\n                class instantiator extends target {};\n                // but ensure the *logic* is 'constructor' for ES2015-compliant engines\n                Object.setPrototypeOf(instantiator, constructor);\n                // ...and for Safari 9\n                instantiator.prototype.constructor = constructor;\n\n                // The spread operator is *dramatically faster, so use it if we can:\n                // http://jsperf.com/new-via-spread-vs-dynamic-function/4\n                ${\n\t\t\t\t\tsupportsSpread\n\t\t\t\t\t\t? `\n\n                    var value = new instantiator(...([].slice.call(args)));\n\n                `\n\t\t\t\t\t\t: `\n\n                    // otherwise, create a dynamic function in order to use 'new'\n                    // Note using 'function.bind' would be simpler, but is much slower:\n                    // http://jsperf.com/new-operator-with-dynamic-function-vs-bind\n                    var argList = '';\n                    for (var i = 0, len = args.length; i < len; i++) {\n                    if (i > 0) argList += ',';\n                    argList += 'args[' + i + ']';\n                    }\n                    var constructCall = Function('constructor, args',\n                    'return new constructor( ' + argList + ' );'\n                    );\n                    var value = constructCall(constructor, args);\n\n                    args = Array.prototype.slice.call(args);\n                    args = [null].concat(args);\n                    var value = new constructor.bind.apply(constructor, args);\n\n                `\n\t\t\t\t}\n\n                // fix up the prototype so it matches the intended one, not one who's\n                // prototype is the intended one :P\n                Object.setPrototypeOf(value, target.prototype);\n                return value;\n            `,\n\t\t\t)\n\n\t\t\t//return Function(\"constructor, args, newTarget\", `\n\t\t\t//  'use strict';\n\n\t\t\t//  if (arguments.length === 3 && typeof newTarget === undefined)\n\t\t\t//    throw new TypeError('undefined is not a constructor');\n\n\t\t\t//  newTarget = newTarget || constructor;\n\n\t\t\t//  ${ supportsSpread ? `\n\n\t\t\t//    var value = new constructor(...([].slice.call(args)));\n\n\t\t\t//  `:`\n\n\t\t\t//    args = Array.prototype.slice.call(args);\n\t\t\t//    args = [null].concat(args);\n\t\t\t//    var value = new constructor.bind.apply(constructor, args);\n\n\t\t\t//  `}\n\n\t\t\t//  Object.setPrototypeOf(value, newTarget.prototype);\n\t\t\t//  return value;\n\t\t\t//`);\n\t\t} else {\n\t\t\tvar instantiator = function () {} as any\n\t\t\treturn function construct(constructor: any, args: any, target: any) {\n\t\t\t\tif (arguments.length === 3 && typeof target !== 'function')\n\t\t\t\t\tthrow new TypeError(target + ' is not a constructor')\n\t\t\t\tinstantiator.prototype = (target || constructor).prototype\n\t\t\t\tvar instance = new instantiator()\n\t\t\t\tvar value = constructor.apply(instance, args)\n\t\t\t\tif (typeof value === 'object' && value) {\n\t\t\t\t\t// we can do better if __proto__ is available (in some ES5 environments)\n\t\t\t\t\tvalue.__proto__ = (target || constructor).prototype\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn instance\n\t\t\t}\n\t\t}\n\t})()\n\n// ES2015 class methods are non-enumerable; we need a helper for copying them.\nvar SKIP_PROPERTIES: (string | symbol)[] = ['arguments', 'caller', 'length', 'name', 'prototype']\nfunction copyProperties(source: any, destination: any) {\n\tif (Object.getOwnPropertyNames && Object.defineProperty) {\n\t\tvar properties: (string | symbol)[] = Object.getOwnPropertyNames(source)\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tproperties = properties.concat(Object.getOwnPropertySymbols(source))\n\t\t}\n\t\tfor (var i = properties.length - 1; i >= 0; i--) {\n\t\t\tif (SKIP_PROPERTIES.indexOf(properties[i]) === -1) {\n\t\t\t\tObject.defineProperty(\n\t\t\t\t\tdestination,\n\t\t\t\t\tproperties[i],\n\t\t\t\t\tObject.getOwnPropertyDescriptor(source, properties[i])!,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var property in source) {\n\t\t\tdestination[property] = source[property]\n\t\t}\n\t}\n}\n\ntype FuncLikeCtor<T, S = {}> = {\n\t(): T\n\tnew (): T\n} & S\n\nfunction newless<T extends Constructor>(constructor: T): FuncLikeCtor<InstanceType<T>, T> {\n\tvar name = constructor.name\n\n\t// V8 and newer versions of JSCore return the full class declaration from\n\t// `toString()`, which lets us be a little smarter and more performant\n\t// about what to do, since we know we are dealing with a \"class\". Note,\n\t// however, not all engines do this. This could be false and the constructor\n\t// might still use class syntax.\n\tvar usesClassSyntax = constructor.toString().substr(0, 5) === 'class'\n\n\tvar requiresNew = usesClassSyntax ? true : null\n\n\tvar newlessConstructor = (() =>\n\t\tfunction (this: any) {\n\t\t\t// If called with an already valid 'this', preserve that 'this' value\n\t\t\t// in the super-type's constructor whenever possible. With function\n\t\t\t// constructors (as opposed to class constructors), it's possible to\n\t\t\t// alter the instance before calling the super constructor--so it's\n\t\t\t// important to preserve that instance if at all possible.\n\t\t\tif (!requiresNew && this instanceof newlessConstructor) {\n\t\t\t\t// requiresNew = 'false' indicates we know the 'new' operator isn't\n\t\t\t\t// necessary for this constructor, but 'null' indicates uncertainty,\n\t\t\t\t// so the call needs to handle potential errors the first time in\n\t\t\t\t// order to determine whether 'new' is definitely required.\n\t\t\t\tif (requiresNew === false) {\n\t\t\t\t\tconst returnValue = constructor.apply(this, arguments as any)\n\t\t\t\t\treturn (typeof returnValue === 'object' && returnValue) || this\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\trequiresNew = false\n\t\t\t\t\tconst returnValue = constructor.apply(this, arguments as any)\n\t\t\t\t\treturn (typeof returnValue === 'object' && returnValue) || this\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Do our best to only capture errors triggred by class syntax.\n\t\t\t\t\t// Unfortunately, there's no special error type for this and the\n\t\t\t\t\t// message is non-standard, so this is the best check we can do.\n\t\t\t\t\tif (\n\t\t\t\t\t\terror instanceof TypeError &&\n\t\t\t\t\t\t(/class constructor/i.test(error.message) || /use the 'new' operator/i.test(error.message)) // Custom Elements in Chrome\n\t\t\t\t\t\t// TODO: there might be other error messages we need to catch,\n\t\t\t\t\t\t// depending on engine and use case. We need to test in all browsers\n\t\t\t\t\t) {\n\t\t\t\t\t\t// mark this constructor as requiring 'new' for next time\n\t\t\t\t\t\trequiresNew = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\terror instanceof Error &&\n\t\t\t\t\t\t\t/Illegal constructor/i.test(error.message) &&\n\t\t\t\t\t\t\tObject.create(constructor.prototype) instanceof Node\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t`The following error can happen if a Custom Element is called\nwith 'new' before being defined. The constructor was ${constructor.name}: `,\n\t\t\t\t\t\t\t\tconstructor,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// make a reasonably good replacement for 'new.target' which is a\n\t\t\t// syntax error in older engines\n\t\t\tvar newTarget\n\t\t\tvar hasNewTarget = false\n\t\t\tif (supportsNewTarget) {\n\t\t\t\teval('newTarget = new.target')\n\t\t\t\tif (newTarget) hasNewTarget = true\n\t\t\t}\n\t\t\tif (!supportsNewTarget || !hasNewTarget) {\n\t\t\t\tnewTarget = this instanceof newlessConstructor ? this.constructor : constructor\n\t\t\t}\n\t\t\tconst returnValue = construct(constructor, arguments, newTarget)\n\t\t\t// best effort to make things easy for functions inheriting from classes\n\t\t\tif (this instanceof newlessConstructor) {\n\t\t\t\tsetPrototype(this, returnValue)\n\t\t\t}\n\t\t\treturn returnValue\n\t\t})()\n\n\tif (name) {\n\t\tconst code = getFunctionBody(newlessConstructor)\n\n\t\tnewlessConstructor = Function(\n\t\t\t'constructor, construct, setPrototype, requiresNew, supportsNewTarget',\n\t\t\t`\n      var newlessConstructor = function ${name}() { ${code} };\n      return newlessConstructor\n    `,\n\t\t)(constructor, construct, setPrototype, requiresNew, supportsNewTarget)\n\t}\n\n\t// copy the `.length` value to the newless constructor\n\tif (constructor.length) {\n\t\t// length is not writable, only configurable, therefore the value\n\t\t// has to be set with a descriptor update\n\t\tsetDescriptor(newlessConstructor, 'length', {\n\t\t\tvalue: constructor.length,\n\t\t})\n\t}\n\n\tnewlessConstructor.prototype = Object.create(constructor.prototype)\n\tnewlessConstructor.prototype.constructor = newlessConstructor\n\n\t// NOTE: *usually* the below will already be true, but we ensure it here.\n\t// Safari 9 requires this for the 'super' keyword to work. Newer versions\n\t// of WebKit and other engines do not. Instead, they use the constructor's\n\t// prototype chain (which is correct by ES2015 spec) (see below).\n\tconstructor.prototype.constructor = constructor\n\n\t// for ES2015 classes, we need to make sure the constructor's prototype\n\t// is the super class's constructor. Further, optimize performance by\n\t// pointing at the actual constructor implementation instead of the\n\t// newless wrapper (in the case that it is wrapped by newless).\n\t;(newlessConstructor as any)[TRUE_CONSTRUCTOR] = constructor\n\n\tcopyProperties(constructor, newlessConstructor)\n\tsetPrototype(newlessConstructor, constructor)\n\n\treturn newlessConstructor as FuncLikeCtor<InstanceType<T>, T>\n}\n\n// Test whether a given syntax is supported\nfunction isSyntaxSupported(example: string, useStrict = true): boolean {\n\ttry {\n\t\treturn !!Function('', (useStrict ? \"'use strict';\" : '') + example)\n\t} catch (error) {\n\t\treturn false\n\t}\n}\n","// TODO no any\n\nexport class WeakTwoWayMap {\n\tm = new WeakMap()\n\tset(a: Object, b: Object) {\n\t\tthis.m.set(a, b)\n\t\tthis.m.set(b, a)\n\t}\n\tget(item: Object) {\n\t\treturn this.m.get(item)\n\t}\n\thas(item: Object) {\n\t\treturn this.m.has(item)\n\t}\n}\n\n// assumes the function opening, body, and closing are on separate lines\nexport function getFunctionBody(fn: Function): string {\n\tconst code = fn.toString().split('\\n')\n\tcode.shift() // remove opening line (function() {)\n\tcode.pop() // remove closing line (})\n\treturn code.join('\\n')\n}\n\nconst descriptorDefaults = {\n\tenumerable: true,\n\tconfigurable: true,\n}\n\n// makes it easier and less verbose to work with descriptors\nexport function setDescriptor(obj: Object, key: string, newDescriptor: PropertyDescriptor, inherited = false): void {\n\tlet currentDescriptor = inherited ? getInheritedDescriptor(obj, key) : Object.getOwnPropertyDescriptor(obj, key)\n\n\tnewDescriptor = overrideDescriptor(currentDescriptor, newDescriptor)\n\tObject.defineProperty(obj, key, newDescriptor)\n}\n\nexport function setDescriptors(obj: Object, newDescriptors: Record<string, PropertyDescriptor>): void {\n\tlet newDescriptor\n\tlet currentDescriptor\n\tconst currentDescriptors = Object.getOwnPropertyDescriptors(obj)\n\n\tfor (const key in newDescriptors) {\n\t\tnewDescriptor = newDescriptors[key]\n\t\tcurrentDescriptor = currentDescriptors[key]\n\t\tnewDescriptors[key] = overrideDescriptor(currentDescriptor, newDescriptor)\n\t}\n\n\tObject.defineProperties(obj, newDescriptors)\n}\n\nfunction overrideDescriptor(\n\toldDescriptor: PropertyDescriptor | undefined,\n\tnewDescriptor: PropertyDescriptor,\n): PropertyDescriptor {\n\tif (\n\t\t('get' in newDescriptor || 'set' in newDescriptor) &&\n\t\t('value' in newDescriptor || 'writable' in newDescriptor)\n\t) {\n\t\tthrow new TypeError('cannot specify both accessors and a value or writable attribute')\n\t}\n\n\tif (oldDescriptor) {\n\t\tif ('get' in newDescriptor || 'set' in newDescriptor) {\n\t\t\tdelete oldDescriptor.value\n\t\t\tdelete oldDescriptor.writable\n\t\t} else if ('value' in newDescriptor || 'writable' in newDescriptor) {\n\t\t\tdelete oldDescriptor.get\n\t\t\tdelete oldDescriptor.set\n\t\t}\n\t}\n\n\treturn {...descriptorDefaults, ...oldDescriptor, ...newDescriptor}\n}\n\n// TODO use signature override\nexport function propertyIsAccessor(obj: Object | PropertyDescriptor, key?: string, inherited = true): boolean {\n\tlet result = false\n\tlet descriptor: PropertyDescriptor | undefined\n\n\tif (arguments.length === 1) {\n\t\tdescriptor = obj\n\t} else {\n\t\tdescriptor = inherited ? getInheritedDescriptor(obj, key!) : Object.getOwnPropertyDescriptor(obj, key!)\n\t}\n\n\tif (descriptor && (descriptor.get || descriptor.set)) result = true\n\n\treturn result\n}\n\ninterface DescriptorWithOwner extends PropertyDescriptor {\n\towner: object\n}\n\nexport function getInheritedDescriptor(obj: object, key: string): DescriptorWithOwner | undefined {\n\tlet currentProto = obj\n\tlet descriptor\n\n\twhile (currentProto) {\n\t\tdescriptor = Object.getOwnPropertyDescriptor(currentProto, key)\n\n\t\tif (descriptor) {\n\t\t\t;(descriptor as DescriptorWithOwner).owner = currentProto\n\t\t\treturn descriptor as DescriptorWithOwner\n\t\t}\n\n\t\tcurrentProto = (currentProto as any).__proto__\n\t}\n\n\treturn void 0\n}\n\nexport function getInheritedPropertyNames(obj: Object): string[] {\n\tlet currentProto = obj\n\tlet keys: string[] = []\n\n\twhile (currentProto) {\n\t\tkeys = keys.concat(Object.getOwnPropertyNames(currentProto))\n\t\tcurrentProto = (currentProto as any).__proto__\n\t}\n\n\t// remove duplicates\n\tkeys = Array.from(new Set(keys))\n\n\treturn keys\n}\n\nexport type Constructor<T = object, A extends any[] = any[], Static = {}> = (new (...a: A) => T) & Static\n\n// this is used for type casting in special cases, see the declaration file\nexport function Constructor<T = object, Static = {}>(Ctor: Constructor<any>): Constructor<T> & Static {\n\treturn Ctor as unknown as Constructor<T> & Static\n}\n\n// check if an object has the given prototype in its chain\nexport function hasPrototype(obj: any, proto: any) {\n\tlet currentProto = obj.__proto__\n\n\tdo {\n\t\tif (proto === currentProto) return true\n\t\tcurrentProto = currentProto.__proto__\n\t} while (currentProto)\n\n\treturn false\n}\n\n// copy all properties (as descriptors) from source to destination\nexport function copyDescriptors(source: Object, destination: Object, mod?: any) {\n\tconst props = Object.getOwnPropertyNames(source)\n\tlet i = props.length\n\twhile (i--) {\n\t\tconst prop = props[i]\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(source, prop)\n\t\tif (mod) mod(descriptor)\n\t\tObject.defineProperty(destination, prop, descriptor!)\n\t}\n}\n\nexport function setDefaultPrototypeDescriptors(\n\tprototype: Object,\n\t{defaultClassDescriptor: {writable, enumerable, configurable}}: any,\n) {\n\tconst descriptors = Object.getOwnPropertyDescriptors(prototype)\n\tlet descriptor\n\n\tfor (const key in descriptors) {\n\t\tdescriptor = descriptors[key]\n\n\t\t// regular value\n\t\tif ('value' in descriptor || 'writable' in descriptor) {\n\t\t\tdescriptor.writable = writable\n\t\t}\n\n\t\t// accessor or regular value\n\t\tdescriptor.enumerable = enumerable\n\t\tdescriptor.configurable = configurable\n\t}\n\n\tsetDescriptors(prototype, descriptors)\n}\n\nexport function setDefaultStaticDescriptors(\n\tCtor: any,\n\t{defaultClassDescriptor: {writable, enumerable, configurable}}: any,\n\tstaticBlacklist?: (string | symbol)[],\n) {\n\tconst descriptors = Object.getOwnPropertyDescriptors(Ctor)\n\tlet descriptor\n\n\tfor (const key in descriptors) {\n\t\tif (staticBlacklist && staticBlacklist.includes(key)) {\n\t\t\tdelete descriptors[key]\n\t\t\tcontinue\n\t\t}\n\n\t\tdescriptor = descriptors[key]\n\n\t\t// regular value\n\t\tif ('value' in descriptor || 'writable' in descriptor) {\n\t\t\tdescriptor.writable = writable\n\t\t}\n\n\t\t// accessor or regular value\n\t\tdescriptor.enumerable = enumerable\n\t\tdescriptor.configurable = configurable\n\t}\n\n\tsetDescriptors(Ctor, descriptors)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        unowned = fn.length === 0,\n        root = unowned && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  },\n        updateFn = unowned ? fn : () => fn(() => cleanNode(root));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.pending !== NOTPENDING ? s.pending : s.tValue);else value = value(s.pending !== NOTPENDING ? s.pending : s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(source, fetcher, options) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = source;\n      source = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = source;\n    source = true;\n  }\n  options || (options = {});\n  const contexts = new Set(),\n        [value, setValue] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.load) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, e, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if (initP && (p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = null;\n      setError(err = e);\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      setValue(() => v);\n      setLoading(false);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching && scheduled) return;\n    scheduled = false;\n    setError(err = undefined);\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        if (err) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) !== fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  let result;\n  const q = Pending = [];\n  try {\n    result = fn();\n  } finally {\n    Pending = null;\n  }\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    batch(fn);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    const updates = Updates;\n    Updates = null;\n    !runningTransition && this.state === STALE || runningTransition && this.tState === STALE ? updateComputation(this) : lookUpstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  if (Pending) {\n    if (node.pending === NOTPENDING) Pending.push(node);\n    node.pending = value;\n    return value;\n  }\n  if (node.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(node)) {\n      if (node.comparator(node.tValue, value)) return value;\n    } else if (node.comparator(node.value, value)) return value;\n  }\n  let TransitionRunning = false;\n  if (Transition) {\n    TransitionRunning = Transition.running;\n    if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n      Transition.sources.add(node);\n      node.tValue = value;\n    }\n    if (!TransitionRunning) node.value = value;\n  } else node.value = value;\n  if (node.observers && node.observers.length) {\n    runUpdates(() => {\n      for (let i = 0; i < node.observers.length; i += 1) {\n        const o = node.observers[i];\n        if (TransitionRunning && Transition.disposed.has(o)) continue;\n        if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n          if (o.pure) Updates.push(o);else Effects.push(o);\n          if (o.observers) markDownstream(o);\n        }\n        if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        if (false) ;\n        throw new Error();\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        runComputation(node, node.tValue, time);\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      lookUpstream(node, ancestors[0]);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!Updates) Effects = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size || Transition.queue.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    const disposed = Transition.disposed;\n    res = Transition.resolve;\n    for (const e of Effects) {\n      \"tState\" in e && (e.state = e.tState);\n      delete e.tState;\n    }\n    Transition = null;\n    batch(() => {\n      for (const d of disposed) cleanNode(d);\n      for (const v of sources) {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n        v.tState = 0;\n      }\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n          if (!tasks.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  for (const f of fns) f(err);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    let res;\n    createComputed(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }));\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === 'function' ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createComputed(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return (s = typeof s === \"function\" ? s() : s) == null ? {} : s;\n}\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = resolveSource(sources[i])[property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in resolveSource(sources[i])) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        }\n      });\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, {\n    equals: (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nconst NoErrors = {};\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn(NoErrors));\n}\nfunction ErrorBoundary(props) {\n  let err = NoErrors;\n  if (sharedConfig.context && sharedConfig.load) {\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count) || NoErrors;\n  }\n  const [errored, setErrored] = createSignal(err);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if ((e = errored()) !== NoErrors) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(NoErrors))) : f;\n    }\n    onError(setErrored);\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let suspenseSetter, showContent, showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const [registry, setRegistry] = createSignal([]),\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        setRegistry(registry => [...registry, {\n          inFallback,\n          showContent,\n          showFallback\n        }]);\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reg = registry(),\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      reg.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = reg[n].inFallback();\n      if (!stop && !s) {\n        reg[n].showContent(visibleContent);\n        reg[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          reg[n].showFallback(visibleFallback);\n        } else reg[n].showFallback(false);\n        stop = true;\n        reg[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    p = sharedConfig.load(key);\n    if (p) {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if ((error = err) || sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    } else if (p === null) sharedConfig.gather(key);\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === undefined) setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(() => {\n          const inFallback = store.inFallback(),\n                visibleContent = showContent ? showContent() : true,\n                visibleFallback = showFallback ? showFallback() : true;\n          dispose && dispose();\n          if ((!inFallback || p !== undefined) && visibleContent) {\n            store.resolved = true;\n            ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!visibleFallback) return;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, enableHydration, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst PropAliases = {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n};\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction memo(fn, equals) {\n  return createMemo(fn, undefined, !equals ? {\n    equals\n  } : undefined);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  const prevString = typeof prev === \"string\";\n  if (value == null && prevString || typeof value === \"string\") return nodeStyle.cssText = value;\n  prevString && (nodeStyle.cssText = undefined, prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) {\n      value(node);\n    }\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => elem.remove());\n  }\n  while (node !== null) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  props || (props = {});\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  props.ref && props.ref(node);\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        prev = current && current[i];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if ((typeof item) === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], prev) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction Assets() {\n  return;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction escape(html) {}\nfunction generateHydrationScript() {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Assets as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, generateHydrationScript, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrAttribute, ssrClassList, ssrHydrationKey, ssrSpread, ssrStyle, style, template };\n","/**\n * Execute the given `func`tion on the next micro \"tick\" of the JS engine.\n */\nexport function defer(func: () => unknown): Promise<unknown> {\n\t// \"defer\" is used as a semantic label for Promise.resolve().then\n\treturn Promise.resolve().then(func)\n}\n\n/**\n * This is an identity \"template string tag function\", which when applied to a\n * template string returns the equivalent of not having used a template tag on\n * a template string to begin with.\n *\n * For example, The following two strings are equivalent:\n *\n * ```js\n * const number = 42\n * const string1 = `meaning of life: ${number}`\n * const string2 = identityTemplateTag`meaning of life: ${number}`\n * ```\n *\n * This can be useful when assigning it to variables like `css` or `html` in\n * order to trigger syntax checking and highlighting inside template strings\n * without actually doing anything to the string (a no-op).\n */\nexport function identityTemplateTag(stringsParts: TemplateStringsArray, ...values: any[]): string {\n\t// unfortunately, it does incur some unnecessary runtime overhead in order to\n\t// receive the string parts and the interpolated values and concatenate them\n\t// all together into the same string as if we hadn't used a template tag.\n\n\tlet str = ''\n\n\tfor (let i = 0; i < values.length; i++) str += stringsParts[i] + String(values[i])\n\n\treturn str + stringsParts[stringsParts.length - 1]\n}\n\nexport function camelCaseToDash(str: string): string {\n\treturn str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase()\n}\n\nexport function defineProp(obj: any, prop: string, value: any) {\n\tObject.defineProperty(obj, prop, {\n\t\tvalue,\n\t\twritable: true,\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t})\n}\n\ndeclare const global: any\n\nexport function getGlobal(): Window {\n\tif (typeof globalThis !== 'undefined') return globalThis as any\n\telse if (typeof window !== 'undefined') return window\n\telse if (typeof global !== 'undefined') return global as any\n\telse return Function('return this')()\n}\n\n// TYPES\n\n// https://github.com/type-challenges/type-challenges/issues/9116\n// More solutions at https://github.com/type-challenges/type-challenges/tree/main/questions/00114-hard-camelcase\n//\n// bug, fooBar becomes foobar, https://github.com/type-challenges/type-challenges/issues/9116#issuecomment-1107928665\n// export type JoinToCamelCase<\n// \tS extends string,\n// \tSep extends string = '-',\n// \tR extends string = '',\n// > = S extends `${infer First}${Sep}${infer Rest}`\n// \t? R extends ''\n// \t\t? JoinToCamelCase<Lowercase<Rest>, Sep, `${R}${Lowercase<First>}`>\n// \t\t: JoinToCamelCase<Lowercase<Rest>, Sep, `${R}${Capitalize<First>}`>\n// \t: R extends ''\n// \t? Lowercase<S>\n// \t: `${R}${Capitalize<S>}`\n//\nexport type JoinToCamelCase<\n\tS extends string,\n\tSep extends string = '-',\n\tUPPER extends boolean = false,\n\tRes extends string = '',\n> = S extends `${infer L}${infer R}`\n\t? L extends Sep\n\t\t? JoinToCamelCase<R, Sep, true, Res>\n\t\t: UPPER extends true\n\t\t? JoinToCamelCase<R, Sep, false, `${Res}${Uppercase<L>}`>\n\t\t: JoinToCamelCase<R, Sep, false, `${Res}${Lowercase<L>}`>\n\t: Res\n\n// https://github.com/type-challenges/type-challenges/issues/9098\n// More solutions at https://github.com/type-challenges/type-challenges/blob/main/questions/00612-medium-kebabcase/README.md\n//\n// export type SplitCamelCase<\n// \tS extends string,\n// \tSep extends string = '-',\n// \tisFirstChar = true,\n// > = S extends `${infer s}${infer right}`\n// \t? s extends Lowercase<s>\n// \t\t? `${s}${SplitCamelCase<right, Sep, false>}`\n// \t\t: isFirstChar extends true\n// \t\t? `${Lowercase<s>}${SplitCamelCase<right, Sep, false>}`\n// \t\t: `${Sep}${Lowercase<s>}${SplitCamelCase<right, Sep, false>}`\n// \t: S\n//\n//\n//\n// type FirstLowcase<T extends string> = T extends `${infer F}${infer R}`\n// \t? F extends Lowercase<F>\n// \t\t? T\n// \t\t: `${Lowercase<F>}${R}`\n// \t: T\n// type SplitCamelCase<S extends string, Sep extends string = '-'> = S extends `${infer F}${infer R}`\n// \t? R extends FirstLowcase<R>\n// \t\t? `${FirstLowcase<F>}${SplitCamelCase<R, Sep>}`\n// \t\t: `${FirstLowcase<F>}${Sep}${SplitCamelCase<FirstLowcase<R>, Sep>}`\n// \t: S\n//\n//\n//\n// type SplitCamelCase<S, Sep extends string = '-'> = S extends `${infer First}${infer Rest}`\n// \t? Rest extends Uncapitalize<Rest>\n// \t\t? `${Uncapitalize<First>}${SplitCamelCase<Rest, Sep>}`\n// \t\t: `${Uncapitalize<First>}${Sep}${SplitCamelCase<Rest, Sep>}`\n// \t: S\n//\n//\n//\n// prettier-ignore\ntype KebabMap = { A: \"a\", B: \"b\", C: \"c\", D: \"d\", E: \"e\", F: \"f\", G: \"g\", H: \"h\", I: \"i\", J: \"j\", K: \"k\", L: \"l\", M: \"m\", N: \"n\", O: \"o\", P: \"p\", Q: \"q\", R: \"r\", S: \"s\", T: \"t\", U: \"u\", V: \"v\", W: \"w\", X: \"x\", Y: \"y\", Z: \"z\", }\ntype SplitCamelCase<\n\tS extends string,\n\tSep extends string = '-',\n\tU extends string = '',\n> = S extends `${infer Target}${infer R}`\n\t? Target extends keyof KebabMap\n\t\t? U extends ''\n\t\t\t? SplitCamelCase<R, Sep, `${U}${KebabMap[Target]}`>\n\t\t\t: SplitCamelCase<R, Sep, `${U}${Sep}${KebabMap[Target]}`>\n\t\t: SplitCamelCase<R, Sep, `${U}${Target}`>\n\t: U\n\nexport type CamelCasedProps<T> = {\n\t[K in keyof T as JoinToCamelCase<Extract<K, string>, '-'>]: T[K]\n}\n\nexport type DashCasedProps<T> = {\n\t[K in keyof T as SplitCamelCase<Extract<K, string>, '-'>]: T[K]\n}\n\n// EXAMPLES\n// type foo0 = JoinToCamelCase<'fooBarBaz'> // Becomes \"foobabaz\"\n// type foo3 = JoinToCamelCase<'foo-bar-baz'> // Becomes \"fooBarBaz\"\n// type foo5 = JoinToCamelCase<'foo bar baz', ' '> // Becomes \"fooBarBaz\"\n// type foo6 = JoinToCamelCase<'foo_bar_baz', '_'> // Becomes \"fooBarBaz\"\n// type foo14 = JoinToCamelCase<'foo:bar:baz', ':'> // Becomes \"fooBarBaz\"\n// type foo4 = JoinToCamelCase<'foobarbaz'> // the same\n// type foo7 = SplitCamelCase<'fooBar'> // Becomes \"foo-bar\"\n// type foo12 = SplitCamelCase<'fooBar', '_'> // Becomes \"foo_bar\"\n// type foo13 = SplitCamelCase<'fooBar', ' '> // Becomes \"foo bar\"\n// type foo11 = SplitCamelCase<'foo-bar'> // the same\n// type foo8 = SplitCamelCase<'foo bar'> // the same\n// type foo9 = SplitCamelCase<'foo_bar'> // the same\n// type foo10 = SplitCamelCase<'foobar'> // the same\n// type t = Join<['foo', 'bar'], ':'> // Becomes \"foo:bar\"\n//\n// interface KebabCased {\n//     \"foo-bar\": string;\n//     foo: number;\n// }\n// type CamelCased = CamelCasedProps<KebabCased>;\n// Becomes\n// {\n//    fooBar: string;\n//    foo: number;\n// }\n","import {render} from 'solid-js/web'\nimport {defer} from './_utils.js'\n\nimport type {AttributeHandler} from './attribute'\nimport type {DashCasedProps} from './_utils'\n\n// TODO `templateMode: 'append' | 'replace'`, which allows a subclass to specify\n// if template content replaces the content of `root`, or is appended to `root`.\n\nlet ctor: typeof LumeElement\n\nconst HTMLElement =\n\tglobalThis.HTMLElement ??\n\tclass HTMLElement {\n\t\tconstructor() {\n\t\t\tthrow new Error(\n\t\t\t\t\"@lume/element needs a DOM to operate with! If this code is running during server-side rendering, it means your app is trying to instantiate elements when it shouldn't be, and should be refactored to avoid doing that when no DOM is present.\",\n\t\t\t)\n\t\t}\n\t}\n\n// TODO Make LumeElement `abstract`, which had issues with mixins last time we\n// tried, but TS has been updated for abstract mixin support.\n\nclass LumeElement extends HTMLElement {\n\t/** The default tag name of the elements this class is instantiated for. */\n\tstatic elementName: string = ''\n\n\t/**\n\t * Define this class for the given element `name`, or using its default name\n\t * (`elementName`) if no `name` given. Defaults to using the global\n\t * `customElements` registry unless another registry is provided (for\n\t * example a ShadowRoot-scoped registry).\n\t *\n\t * If a `name` is given, then the class will be extended with an empty\n\t * subclass so that a new class is used for each new name, because otherwise\n\t * a CustomElementRegistry does not allow the same exact class to be used\n\t * more than once regardless of the name.\n\t *\n\t * @returns Returns the defined element class, which is only going to be a\n\t * different subclass of the class this is called on if passing in a custom\n\t * `name`, otherwise returns the same class this is called on.\n\t */\n\tstatic defineElement(name?: string, registry: CustomElementRegistry = customElements): typeof LumeElement {\n\t\tif (!name) {\n\t\t\tname = this.elementName\n\t\t\tif (registry.get(name)) {\n\t\t\t\tconsole.warn(`defineElement(): An element class was already defined for tag name ${name}.`)\n\t\t\t\treturn this\n\t\t\t}\n\t\t\tregistry.define(name, this)\n\t\t\treturn this\n\t\t} else {\n\t\t\tif (registry.get(name)) {\n\t\t\t\tconsole.warn(`defineElement(): An element class was already defined for tag name ${name}.`)\n\t\t\t\treturn this\n\t\t\t} else {\n\t\t\t\t// Allow the same element to be defined more than once using\n\t\t\t\t// alternative names.\n\t\t\t\tconst Class = class extends this {}\n\t\t\t\tClass.elementName = name\n\t\t\t\tregistry.define(name, Class)\n\t\t\t\treturn Class\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Non-decorator users can use this to specify which props are reactive. */\n\tstatic reactiveProperties?: string[]\n\n\t/** Non-decorator users can use this to specify attributes, which automatically map to reactive properties. */\n\tstatic observedAttributes?: string[] | Record<string, AttributeHandler>\n\n\t// Note, this is used in the @attribute decorator, see attribute.ts.\n\t// @ts-ignore, property is used\n\tprivate declare __attributesToProps?: Record<string, {name: string; attributeHandler?: AttributeHandler}>\n\n\tprotected declare _preUpgradeValues: Map<PropertyKey, unknown>\n\n\t// __propsSetAtLeastOnce__ comes from @lume/variable's @reactive decorator.\n\t// It is a Set<string> that tells us if a reactive property has been set at\n\t// least once,\n\tprotected declare __propsSetAtLeastOnce__?: Set<PropertyKey>\n\n\tprotected declare __reactifiedProps__?: Set<PropertyKey>\n\n\t// This property MUST be defined before any other non-static non-declared\n\t// class properties . Its initializer needs to run before any other\n\t// properties are defined, in order to detect and handle only instance\n\t// properties that already exist from custom element pre-upgrade time.\n\tprotected ___init___ = (() => {\n\t\t// XXX We could remove this and instead use a class decorator (returns a\n\t\t// new class), which would allow us to run this logic during\n\t\t// construction without requiring the user to extend from a specific\n\t\t// base class (LumeElement) unless they elect not to use decorators.\n\t\tthis.__handleInitialPropertyValuesIfAny()\n\n\t\t// XXX Should we handle initial attributes too?\n\t})()\n\n\tprivate __handleInitialPropertyValuesIfAny() {\n\t\t// We need to delete initial value-descriptor properties (if they exist)\n\t\t// and store the initial values in the storage for our reactive variable\n\t\t// accessors.\n\t\t//\n\t\t// If we don't do this, then DOM APIs like cloneNode will create our\n\t\t// node without first upgrading it, and then if someone sets a property\n\t\t// (while our reactive accessors are not yet present in the class\n\t\t// prototype) it means those values will be set as value descriptor\n\t\t// properties on the instance instead of interacting with our accessors\n\t\t// (i.e. the new properties will override our accessors that the\n\t\t// instance will gain on its prototype chain once the upgrade process\n\t\t// places our class prototype in the instance's prototype chain).\n\t\t//\n\t\t// This can also happen if we set properties on an element that isn't\n\t\t// upgraded into a custom element yet, and thus will not yet have our\n\t\t// accessors.\n\t\t//\n\t\t// Assumption: any enumerable own props must've been set on the\n\t\t// element before it was upgraded. Builtin DOM properties are\n\t\t// not enumerable.\n\n\t\tconst preUpgradeKeys = Object.keys(this) as (keyof this)[]\n\t\tthis._preUpgradeValues = new Map()\n\n\t\tfor (const propName of preUpgradeKeys) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(this, propName)!\n\n\t\t\t// Handle only value descriptors.\n\t\t\tif ('value' in descriptor) {\n\t\t\t\t// Delete the pre-upgrade value descriptor (1/2)...\n\t\t\t\tdelete this[propName]\n\n\t\t\t\tthis._preUpgradeValues.set(propName, descriptor.value)\n\n\t\t\t\t// NOTE, deferring allows preexisting preupgrade values\n\t\t\t\t// to be handled *after* class fields have been set\n\t\t\t\t// during Custom Element upgrade (because otherwise\n\t\t\t\t// those would override the pre-existing values we're\n\t\t\t\t// trying to assign here).\n\t\t\t\tdefer(() => {\n\t\t\t\t\tconst propSetAtLeastOnce = this.__propsSetAtLeastOnce__?.has(propName)\n\n\t\t\t\t\t// ... (2/2) and re-assign the value so that it goes through an\n\t\t\t\t\t// inherited accessor.\n\t\t\t\t\t//\n\t\t\t\t\t// If the property has been set between the time LumeElement\n\t\t\t\t\t// constructor ran and the deferred microtask, then we don't\n\t\t\t\t\t// overwrite the property's value with the pre-upgrade value\n\t\t\t\t\t// because it has been intentionally set to a desired value\n\t\t\t\t\t// already.\n\t\t\t\t\t//\n\t\t\t\t\t// AND we handle inherited props or reactified props only\n\t\t\t\t\t// (because that means there may be an accessor that needs\n\t\t\t\t\t// the value to be passed in). The @element decorator otherwise\n\t\t\t\t\t// handles non-inherited props before construction\n\t\t\t\t\t// finishes. {{\n\t\t\t\t\tif (propSetAtLeastOnce) return\n\n\t\t\t\t\tconst inheritsProperty = propName in (this as any).__proto__\n\t\t\t\t\tconst hasReactifiedProp = this.__reactifiedProps__?.has(propName)\n\n\t\t\t\t\t// TODO: Should we detect if `this[propName]` is a\n\t\t\t\t\t// non-inherited accessor (instead of hasReactifiedProp).\n\t\t\t\t\t// Maybe a base class author extending from LumeElement\n\t\t\t\t\t// needs defines a new type of accessor that needs\n\t\t\t\t\t// pre-upgrade value. Perhaps we can provide an opt-in.\n\t\t\t\t\tif (inheritsProperty || hasReactifiedProp) this[propName] = descriptor.value\n\t\t\t\t\t// }}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// We assume a getter/setter descriptor is intentional and meant\n\t\t\t\t// to override or extend our getter/setter so we leave those\n\t\t\t\t// alone. The user is responsible for ensuring they either\n\t\t\t\t// override, or extend, our accessor with theirs.\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * If a subclass provides this, it should return DOM. It is called with\n\t * Solid.js `render()`, so it can also contain Solid.js reactivity (signals\n\t * and effects) and templating (DOM-returning reactive JSX or html template\n\t * literals).\n\t */\n\tprotected declare template?: Template\n\n\t/**\n\t * If provided, this style gets created once per ShadowRoot of each element\n\t * instantiated from this class. The expression can access `this` for string\n\t * interpolation.\n\t */\n\tprotected declare css?: string | (() => string)\n\n\t/**\n\t * If provided, this style gets created a single time for all elements\n\t * instantiated from this class, instead of once per element. If you do not\n\t * need to interpolate values into the string using `this`, then use this\n\t * static property for more performance compared to the instance property.\n\t */\n\tprotected declare static css?: string | (() => string)\n\n\t/**\n\t * When `true`, the custom element will have a `ShadowRoot`. Set to `false`\n\t * to not use a `ShadowRoot`. When `false`, styles will not be scoped via\n\t * the built-in `ShadowRoot` scoping mechanism, but by a much more simple\n\t * shared style sheet placed at the nearest root node, with `:host`\n\t * selectors converted to tag names.\n\t */\n\treadonly hasShadow: boolean = true\n\n\tprivate __root: Node | null = null\n\n\t/**\n\t * Subclasses can override this to provide an alternate Node to render into\n\t * (f.e. a subclass can `return this` to render into itself instead of making a root)\n\t */\n\tprotected get root(): Node {\n\t\tif (!this.hasShadow) return this\n\t\tif (this.__root) return this.__root\n\t\tif (this.shadowRoot) return (this.__root = this.shadowRoot)\n\t\treturn (this.__root = this.attachShadow({mode: 'open'}))\n\t}\n\tprotected set root(v: Node) {\n\t\tif (!this.hasShadow) throw new Error('Can not set root, element.hasShadow is false.')\n\t\t// @prod-prune\n\t\tif (this.__root || this.shadowRoot) throw new Error('Element root can only be set once if there is no ShadowRoot.')\n\t\tthis.__root = v\n\t}\n\n\t/**\n\t * Define which `Node` to append style sheets to when `hasShadow` is `true`.\n\t * Defaults to the `this.root`, which in turn defaults to the element's\n\t * `ShadowRoot`.  When `hasShadow` is `true`, an alternate `styleRoot` is\n\t * sometimes needed for styles to be appended elsewhere than the root. For\n\t * example, return some other `Node` within the root to append styles to.\n\t * This is ignored if `hasShadow` is `false`.\n\t */\n\tprotected get styleRoot(): Node {\n\t\treturn this.root\n\t}\n\n\tattachShadow(options: ShadowRootInit) {\n\t\tif (this.__root) console.warn('Element already has a root defined.')\n\t\treturn (this.__root = super.attachShadow(options))\n\t}\n\n\tprivate declare __dispose?: () => void\n\n\tconnectedCallback() {\n\t\tthis.__setStyle()\n\n\t\tconst template = this.template\n\n\t\t// TODO This needs testing to ensure it works with DOM or the result of JSX alike.\n\t\tif (template)\n\t\t\tthis.__dispose = render(typeof template === 'function' ? template.bind(this) : () => template, this.root)\n\t}\n\n\tdisconnectedCallback() {\n\t\tthis.__dispose && this.__dispose()\n\n\t\tthis.__cleanupStyle()\n\t}\n\n\tattributeChangedCallback?(name: string, oldVal: string | null, newVal: string | null): void\n\n\tprivate static __styleRootNodeRefCountPerTagName = new WeakMap<Node, Record<string, number>>()\n\tprivate __styleRootNode: HTMLHeadElement | ShadowRoot | null = null\n\n\t#defaultHostStyle = (hostSelector: string) => /*css*/ `${hostSelector} {\n\t\tdisplay: block;\n\t}`\n\n\tprivate __setStyle() {\n\t\tctor = this.constructor as typeof LumeElement\n\t\tconst staticCSS = typeof ctor.css === 'function' ? (ctor.css = ctor.css()) : ctor.css || ''\n\t\tconst instanceCSS = typeof this.css === 'function' ? this.css() : this.css || ''\n\n\t\tif (this.hasShadow) {\n\t\t\tconst hostSelector = ':host'\n\t\t\tconst staticStyle = document.createElement('style')\n\n\t\t\tstaticStyle.innerHTML = `\n\t\t\t\t${this.#defaultHostStyle(hostSelector)}\n\t\t\t\t${staticCSS}\n\t\t\t\t${instanceCSS}\n\t\t\t`\n\n\t\t\t// If this element has a shadow root, put the style there. This is the\n\t\t\t// standard way to scope styles to a component.\n\n\t\t\tthis.styleRoot.appendChild(staticStyle)\n\t\t} else {\n\t\t\t// When this element doesn't have a shadow root, then we want to append the\n\t\t\t// style only once to the rootNode where it lives (a ShadoowRoot or\n\t\t\t// Document). If there are multiple of this same element in the rootNode,\n\t\t\t// then the style will be added only once and will style all the elements\n\t\t\t// in the same rootNode.\n\n\t\t\t// Because we're connected, getRootNode will return either the\n\t\t\t// Document, or a ShadowRoot.\n\t\t\tconst rootNode = this.getRootNode()\n\n\t\t\tthis.__styleRootNode = rootNode === document ? document.head : (rootNode as ShadowRoot)\n\n\t\t\tlet refCountPerTagName = LumeElement.__styleRootNodeRefCountPerTagName.get(this.__styleRootNode)\n\t\t\tif (!refCountPerTagName)\n\t\t\t\tLumeElement.__styleRootNodeRefCountPerTagName.set(this.__styleRootNode, (refCountPerTagName = {}))\n\t\t\tconst refCount = refCountPerTagName[this.tagName] || 0\n\t\t\trefCountPerTagName[this.tagName] = refCount + 1\n\n\t\t\tif (refCount === 0) {\n\t\t\t\tconst hostSelector = this.tagName.toLowerCase()\n\t\t\t\tconst staticStyle = document.createElement('style')\n\n\t\t\t\tstaticStyle.innerHTML = `\n\t\t\t\t\t${this.#defaultHostStyle(hostSelector)}\n\t\t\t\t\t${staticCSS ? staticCSS.replaceAll(':host', hostSelector) : staticCSS}\n\t\t\t\t`\n\n\t\t\t\tstaticStyle.id = this.tagName.toLowerCase()\n\n\t\t\t\tthis.__styleRootNode.appendChild(staticStyle)\n\t\t\t}\n\n\t\t\tif (instanceCSS) {\n\t\t\t\t// For dynamic per-instance styles, make one style element per\n\t\t\t\t// element instance so it contains that element's unique styles,\n\t\t\t\t// associated to a unique attribute selector.\n\t\t\t\tconst id = this.tagName.toLowerCase() + '-' + this.__id\n\n\t\t\t\t// Add the unique attribute that the style selector will target.\n\t\t\t\tthis.setAttribute(id, '')\n\n\t\t\t\t// TODO Instead of creating one style element per custom\n\t\t\t\t// element, we can add the styles to a single style element. We\n\t\t\t\t// can use the CSS OM instead of innerHTML to make it faster\n\t\t\t\t// (but innerHTML is nice for dev mode because it shows the\n\t\t\t\t// content in the DOM when looking in element inspector, so\n\t\t\t\t// allow option for both).\n\t\t\t\tconst instanceStyle = (this.__dynamicStyle = document.createElement('style'))\n\n\t\t\t\tinstanceStyle.id = id\n\t\t\t\tinstanceStyle.innerHTML = instanceCSS.replaceAll(':host', `[${id}]`)\n\n\t\t\t\tconst rootNode = this.getRootNode()\n\n\t\t\t\tthis.__styleRootNode = rootNode === document ? document.head : (rootNode as ShadowRoot)\n\n\t\t\t\tthis.__styleRootNode.appendChild(instanceStyle)\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static __elementId = 0\n\tprivate __id = LumeElement.__elementId++\n\tprivate __dynamicStyle: HTMLStyleElement | null = null\n\n\tprivate __cleanupStyle() {\n\t\tdo {\n\t\t\tif (this.hasShadow) break\n\n\t\t\tconst refCountPerTagName = LumeElement.__styleRootNodeRefCountPerTagName.get(this.__styleRootNode!)\n\n\t\t\tif (!refCountPerTagName) break\n\n\t\t\tlet refCount = refCountPerTagName[this.tagName]\n\n\t\t\tif (refCount === undefined) break\n\n\t\t\trefCountPerTagName[this.tagName] = --refCount\n\n\t\t\tif (refCount === 0) {\n\t\t\t\tdelete refCountPerTagName[this.tagName]\n\n\t\t\t\t// TODO PERF Improve performance by saving the style\n\t\t\t\t// instance on a static var, instead of querying for it.\n\t\t\t\tconst style = this.__styleRootNode!.querySelector('#' + this.tagName)\n\t\t\t\tstyle?.remove()\n\t\t\t}\n\t\t} while (false)\n\n\t\tif (this.__dynamicStyle) this.__dynamicStyle.remove()\n\t}\n\n\t// not used currently, but we'll leave this here so that child classes can\n\t// call super, and that way we can add an implementation later when needed.\n\tadoptedCallback() {}\n}\n\n// TODO rename the export to LumeElement in a breaking version bump.\nexport {LumeElement as Element}\n\n// This is TypeScript-specific. Eventually Hegel would like to have better\n// support for JSX. We'd need to figure how to supports types for both systems.\nimport type {JSX} from './jsx-runtime'\ntype JSXOrDOM = JSX.Element | globalThis.Element\ntype TemplateContent = JSXOrDOM | JSXOrDOM[]\ntype Template = TemplateContent | (() => TemplateContent)\n\n/**\n * A helper for defining the JSX types of an element's attributes.\n *\n * You give it your element class and a list of properties (a string\n * union type), and it outputs a type with those properties being\n * optional and dash-cased. The output object also contains all the\n * built-in HTML attributes. You can then augment the\n * JSX.IntrinsicElements definition with the attributes for your element.\n *\n * For example, you would do the following so that your element's attribute\n * are available and type checked in the JSX of any consumers:\n *\n * ```js\n * import {Element, attribute, numberAttribute, element, ElementAttributes} from '@lume/element'\n *\n * \\@element('cool-element')\n * class CoolElement extends Element {\n *   \\@attribute foo: string | null = null\n *   \\@attribute bar: string | null = 'bar'\n *   \\@numberAttribute(123) loremIpsum = 123\n * }\n *\n * declare module '@lume/element' {\n *   namespace JSX {\n *     interface IntrinsicElements {\n *       'cool-element': ElementAttributes<CoolElement, 'foo' | 'bar'>\n *     }\n *   }\n * }\n * ```\n *\n * The result is that TypeScript will properly type-check the following\n * JSX expression (notice lorem-ipsum is dash-case):\n *\n * ```jsx\n * let coolEl = <cool-element foo={'foo'} bar={null} lorem-ipsum={456}></cool-element>\n * ```\n */\nexport type ElementAttributes<\n\tElementType,\n\tSelectedProperties extends keyof ElementType,\n\tAdditionalProperties extends object = {},\n> = WithStringValues<DashCasedProps<Partial<Pick<ElementType, SelectedProperties>>>> &\n\tAdditionalProperties &\n\tOmit<JSX.HTMLAttributes<ElementType>, SelectedProperties | keyof AdditionalProperties>\n\ntype WithStringValues<Type extends object> = {\n\t[Property in keyof Type]: Type[Property] extends string ? Type[Property] : Type[Property] | string\n}\n","// TODO\n//  [x] remove the now-unnecessary modes (leave just what was 'es5' mode)\n//  [x] link helpers to each other, making it possible to destructure the arguments to definer functions\n//  [x] let access helper prototype objects extend from Object, otherwise common tools are not available.\n//  [x] accept a function as return value of function definer, to be treated as a class to derive the definition from, so that it can have access to Protected and Private helpers\n//  [x] let the returned class define protected and private getters which return the protected and private definitions.\n//  [ ] protected and private static members\n//  [ ] no `any` types\n//  [ ] other TODOs in the code\n\nimport {\n\tConstructor,\n\tcopyDescriptors,\n\tsetDefaultStaticDescriptors,\n\tsetDefaultPrototypeDescriptors,\n\thasPrototype,\n} from './utils.js'\n\nimport type {Id} from './types.js'\n\ntype ImplementationKeys = 'static' | 'private' | 'protected'\n\ntype FunctionToConstructor<T, TReturn> = T extends (...a: infer A) => void ? new (...a: A) => TReturn : never\n\n// Note, void also works the same in place of unknown\ntype ReplaceCtorReturn<T, TReturn> = T extends new (...a: infer A) => unknown ? new (...a: A) => TReturn : never\n\ntype ConstructorOrDefault<T> = T extends {constructor: infer TCtor} ? TCtor : () => void\n\n// Although the SuperType type definiton already checks that T extends from\n// Constructor, the additional check in the generic paramters is useful so\n// that we don't get an error about \"never\" which is hard to track down. The\n// generic paramter will cause a more helpful and understandable error.\n// TODO ensure that T is InstanceType of TBase\n// prettier-ignore\ntype SuperType<_T, TSuper extends Constructor<any>> = TSuper extends Constructor<infer I, infer A>\n        ? {constructor: (...a: A) => I} & InstanceType<TSuper>\n        : never\n// type SuperType<\n//     T extends InstanceType<TSuper>,\n//     TSuper extends Constructor<any>\n// > = TSuper extends Constructor<infer I, infer A>\n//     ? T extends InstanceType<TSuper>\n//         ? {constructor: (...a: A) => I} & Id<InstanceType<TSuper>>\n//         : never\n//     : never\n\ntype SuperHelper<TSuper extends Constructor> = <T>(self: T) => SuperType<T, TSuper>\ntype PrivateHelper = <T>(self: T) => T extends {__: {private: infer TPrivate}} ? TPrivate : never\ntype PublicHelper = <T>(self: T) => Omit<T, ImplementationKeys> // TODO validate instance is public?\ntype ProtectedHelper = <T>(self: T) => T extends {__: {protected: infer TProtected}} ? TProtected : never\n// type ProtectedHelper = <T>(self: T) => T extends {protected: infer TProtected} ? TProtected : never\ntype Statics<T> = T extends {static: infer TStatic} ? TStatic : {}\ntype SaveInheritedProtected<T> = T extends {protected: infer TProtected} ? TProtected : {}\n\n// there's a missing link here: if the super class of T is a native class\n// that extends from a lowclass class, then we don't inherit those protected\n// members. Any ideas?\ntype StaticsAndProtected<T> = Id<Statics<T> & {__: {protected: SaveInheritedProtected<T>}}>\n\ntype ExtractInheritedProtected<T> = T extends {__: infer TProtected} ? TProtected : {}\ntype PickImplementationKeys<T> = Pick<T, Extract<keyof T, ImplementationKeys>> // similar to Pick, but not quite\n\n// this moves the implementation keys off the constructor return type and\n// onto a fake __ property, so that we can reference the __ type within the\n// implementatin code, but so that the outside (public) doesn't see the fake\n// __ property.\ntype LowClassThis<T> = Id<Omit<T, ImplementationKeys> & {__: PickImplementationKeys<T>}>\n\ntype OmitImplementationKeys<T> = Omit<T, ImplementationKeys>\n\nimport {\n\tgetFunctionBody,\n\tsetDescriptor,\n\tpropertyIsAccessor,\n\tgetInheritedDescriptor,\n\tgetInheritedPropertyNames,\n\tWeakTwoWayMap,\n} from './utils.js'\n\nexport const staticBlacklist = ['subclass', 'extends', ...Object.getOwnPropertyNames(new Function())]\n\nconst publicProtoToProtectedProto = new WeakMap()\nconst publicProtoToPrivateProto = new WeakMap()\n\n// A two-way map to associate public instances with protected instances.\n// There is one protected instance per public instance\nconst publicToProtected = new WeakTwoWayMap()\n\n// so we can get the class scope associated with a private instance\nconst privateInstanceToClassScope = new WeakMap()\n\nconst brandToPublicPrototypes = new WeakMap()\nconst brandToProtectedPrototypes = new WeakMap()\nconst brandToPrivatePrototypes = new WeakMap()\nconst brandToPublicsPrivates = new WeakMap()\n\nconst defaultOptions = {\n\t// es5 class inheritance is simple, nice, easy, and robust\n\t// There was another mode, but it has been removed\n\tmode: 'es5',\n\n\t// false is better for performance, but true will use Function (similar to\n\t// eval) to name your class functions in the most accurate way.\n\tnativeNaming: false,\n\n\t// similar to ES6 classes:\n\tprototypeWritable: false,\n\tdefaultClassDescriptor: {\n\t\twritable: true,\n\t\tenumerable: false,\n\t\tconfigurable: true,\n\t},\n\tsetClassDescriptors: true,\n}\n\nexport class InvalidSuperAccessError extends Error {}\nexport class InvalidAccessError extends Error {}\n\nexport const Class = createClassHelper()\n\nexport function createClassHelper(options?: any) {\n\toptions = options ? {...defaultOptions, ...options} : defaultOptions\n\n\toptions.defaultClassDescriptor = {\n\t\t...defaultOptions.defaultClassDescriptor,\n\t\t...options.defaultClassDescriptor,\n\t}\n\n\tconst {mode, prototypeWritable, setClassDescriptors, nativeNaming} = options\n\n\t/*\n\t * this is just the public interface adapter for createClass(). Depending\n\t * on how you call this interface, you can do various things like:\n\t *\n\t * - anonymous empty class\n\t *\n\t *    Class()\n\t *\n\t * - named empty class\n\t *\n\t *    Class('Foo')\n\t *\n\t * - base class named Foo\n\t *\n\t *    Class('Foo', (Public, Protected, Private) => {\n\t *      someMethod() { ... },\n\t *    })\n\t *\n\t * - anonymous base class\n\t *\n\t *    Class((Public, Protected, Private) => {\n\t *      someMethod() { ... },\n\t *    })\n\t *\n\t *    Class('Foo').extends(OtherClass, (Public, Protected, Private) => ({\n\t *      someMethod() { ... },\n\t *    }))\n\t *\n\t *    OtherClass.subclass = Class\n\t *    const Bar = OtherClass.subclass((Public, Protected, Private) => {\n\t *      ...\n\t *    })\n\t *\n\t * - any class made with lowclass has a static subclass if you prefer using\n\t *   that:\n\t *\n\t *    Bar.subclass('Baz', (Public, Protected, Private) => {...})\n\t *\n\t * - but you could as well do\n\t *\n\t *    Class('Baz').extends(Bar, (Public, Protected, Private) => {...})\n\t */\n\tfunction Class(): typeof Object\n\t// export function Class<TBase>(\n\tfunction Class(name: string): {\n\t\textends<TBase extends Constructor, T>(\n\t\t\tbase: TBase,\n\t\t\tmembers: (helpers: {\n\t\t\t\tSuper: SuperHelper<TBase>\n\t\t\t\tPublic: PublicHelper\n\t\t\t\tProtected: ProtectedHelper\n\t\t\t\tPrivate: PrivateHelper\n\t\t\t}) => T &\n\t\t\t\tPartial<InstanceType<TBase>> &\n\t\t\t\tThisType<LowClassThis<T & InstanceType<TBase> & ExtractInheritedProtected<TBase>>>,\n\t\t\tbrand?: object,\n\t\t): T extends {constructor: infer _TCtor}\n\t\t\t? FunctionToConstructor<ConstructorOrDefault<T>, Id<InstanceType<TBase> & OmitImplementationKeys<T>>> &\n\t\t\t\t\tId<StaticsAndProtected<T> & Pick<TBase, keyof TBase>>\n\t\t\t: ReplaceCtorReturn<TBase, Id<InstanceType<TBase>>> & Id<StaticsAndProtected<T> & Pick<TBase, keyof TBase>>\n\t}\n\tfunction Class<T>(\n\t\tname: string,\n\t\tmembers: (\n\t\t\thelpers: {\n\t\t\t\tPublic: PublicHelper\n\t\t\t\tProtected: ProtectedHelper\n\t\t\t\tPrivate: PrivateHelper\n\t\t\t\tSuper: never\n\t\t\t}, // TODO Super is actually Object\n\t\t) => T & ThisType<LowClassThis<T>>,\n\t\tbrand?: object,\n\t): FunctionToConstructor<ConstructorOrDefault<T>, Id<OmitImplementationKeys<T>>> & Id<StaticsAndProtected<T>>\n\tfunction Class<T>(\n\t\tname: string,\n\t\tmembers: T & ThisType<LowClassThis<T>>,\n\t\tbrand?: object,\n\t): FunctionToConstructor<ConstructorOrDefault<T>, Id<OmitImplementationKeys<T>>> & Id<StaticsAndProtected<T>>\n\tfunction Class(this: any, ...args: any[]) {\n\t\tlet usingStaticSubclassMethod = false\n\n\t\t// if called as SomeConstructor.subclass, or bound to SomeConstructor\n\t\tif (typeof this === 'function') usingStaticSubclassMethod = true\n\n\t\t// f.e. `Class()`, `Class('Foo')`, `Class('Foo', {...})` , `Class('Foo',\n\t\t// {...}, Brand)`, similar to `class {}`, `class Foo {}`, class Foo\n\t\t// {...}, and class Foo {...} with branding (see comments on classBrand\n\t\t// below regarding positional privacy)\n\t\tif (args.length <= 3) {\n\t\t\tlet name = ''\n\t\t\tlet definer: any = null\n\t\t\tlet classBrand: any = null\n\n\t\t\t// f.e. `Class('Foo')`\n\t\t\tif (typeof args[0] === 'string') name = args[0]\n\t\t\t// f.e. `Class((pub, prot, priv) => ({ ... }))`\n\t\t\telse if (typeof args[0] === 'function' || typeof args[0] === 'object') {\n\t\t\t\tdefiner = args[0]\n\t\t\t\tclassBrand = args[1]\n\t\t\t}\n\n\t\t\t// f.e. `Class('Foo', (pub, prot, priv) => ({ ... }))`\n\t\t\tif (typeof args[1] === 'function' || typeof args[1] === 'object') {\n\t\t\t\tdefiner = args[1]\n\t\t\t\tclassBrand = args[2]\n\t\t\t}\n\n\t\t\t// Make a class in case we wanted to do just `Class()` or\n\t\t\t// `Class('Foo')`...\n\t\t\tconst Ctor = usingStaticSubclassMethod\n\t\t\t\t? createClass.call(this, name, definer, classBrand)\n\t\t\t\t: createClass(name, definer, classBrand)\n\n\t\t\t// ...but add the extends helper in case we wanted to do like:\n\t\t\t// Class().extends(OtherClass, (Public, Protected, Private) => ({\n\t\t\t//   ...\n\t\t\t// }))\n\t\t\tCtor.extends = function (ParentClass: any, def: any, brand: any) {\n\t\t\t\tdef = def || definer\n\t\t\t\tbrand = brand || classBrand\n\t\t\t\treturn createClass.call(ParentClass, name, def, brand)\n\t\t\t}\n\n\t\t\treturn Ctor\n\t\t}\n\n\t\tthrow new TypeError('invalid args')\n\t}\n\n\treturn Class\n\n\t/**\n\t * @param {string} className The name that the class being defined should\n\t * have.\n\t * @param {Function} definer A function or object for defining the class.\n\t * If definer a function, it is passed the Public, Protected, Private, and\n\t * Super helpers. Methods and properties can be defined on the helpers\n\t * directly.  An object containing methods and properties can also be\n\t * returned from the function. If definer is an object, the object should\n\t * be in the same format as the one returned if definer were a function.\n\t */\n\tfunction createClass(this: any, className: string, definer: (...args: any[]) => any, classBrand: object) {\n\t\t'use strict'\n\n\t\t// f.e. ParentClass.subclass((Public, Protected, Private) => {...})\n\t\tlet ParentClass = this\n\n\t\tif (typeof className !== 'string') {\n\t\t\tthrow new TypeError(`\n                You must specify a string for the 'className' argument.\n            `)\n\t\t}\n\n\t\tlet definition = null\n\n\t\t// f.e. Class('Foo', { ... })\n\t\tif (definer && typeof definer === 'object') {\n\t\t\tdefinition = definer\n\t\t}\n\n\t\t// Return early if there's no definition or parent class, just a simple\n\t\t// extension of Object. f.e. when doing just `Class()` or\n\t\t// `Class('Foo')`\n\t\telse if (!ParentClass && (!definer || (typeof definer !== 'function' && typeof definer !== 'object'))) {\n\t\t\tlet Ctor\n\n\t\t\tif (nativeNaming && className) Ctor = new Function(`return function ${className}() {}`)()\n\t\t\telse {\n\t\t\t\t// force anonymous even in ES6+\n\t\t\t\tCtor = (() => function () {})()\n\n\t\t\t\tif (className) setDescriptor(Ctor, 'name', {value: className})\n\t\t\t}\n\n\t\t\tCtor.prototype = {__proto__: Object.prototype, constructor: Ctor}\n\n\t\t\t// no static inheritance here, just like with `class Foo {}`\n\n\t\t\tsetDescriptor(Ctor, 'subclass', {\n\t\t\t\tvalue: Class,\n\t\t\t\twritable: true, // TODO maybe let's make this non writable\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t})\n\n\t\t\treturn Ctor\n\t\t}\n\n\t\t// A two-way map to associate public instances with private instances.\n\t\t// Unlike publicToProtected, this is inside here because there is one\n\t\t// private instance per class scope per instance (or to say it another\n\t\t// way, each instance has as many private instances as the number of\n\t\t// classes that the given instance has in its inheritance chain, one\n\t\t// private instance per class)\n\t\tconst scopedPublicsToPrivates = classBrand ? void undefined : new WeakTwoWayMap()\n\n\t\tif (classBrand) {\n\t\t\tif (!brandToPublicsPrivates.get(classBrand)) brandToPublicsPrivates.set(classBrand, new WeakTwoWayMap())\n\t\t}\n\n\t\t// if no brand provided, then we use the most fine-grained lexical\n\t\t// privacy. Lexical privacy is described at\n\t\t// https://github.com/tc39/proposal-class-fields/issues/60\n\t\t//\n\t\t// TODO make prototypes non-configurable so that the clasds-brand system\n\t\t// can't be tricked. For now, it's good enough, most people aren't going\n\t\t// to go out of their way to mangle with the prototypes in order to\n\t\t// force invalid private access.\n\t\tclassBrand = classBrand || {brand: 'lexical'}\n\n\t\t// the class \"scope\" that we will bind to the helper functions\n\t\tconst scope = {\n\t\t\tclassName, // convenient for debugging\n\n\t\t\tget publicToPrivate() {\n\t\t\t\treturn scopedPublicsToPrivates ? scopedPublicsToPrivates : brandToPublicsPrivates.get(classBrand)\n\t\t\t},\n\n\t\t\tclassBrand,\n\n\t\t\t// we use these to memoize the Public/Protected/Private access\n\t\t\t// helper results, to make subsequent accessses faster.\n\t\t\tcachedPublicAccesses: new WeakMap(),\n\t\t\tcachedProtectedAccesses: new WeakMap(),\n\t\t\tcachedPrivateAccesses: new WeakMap(),\n\t\t} as any\n\n\t\t// create the super helper for this class scope\n\t\tconst supers = new WeakMap()\n\t\tconst Super = superHelper.bind(null, supers, scope)\n\n\t\t// bind this class' scope to the helper functions\n\t\tconst Public = getPublicMembers.bind(null, scope) as any\n\t\tconst Protected = getProtectedMembers.bind(null, scope) as any\n\t\tconst Private = getPrivateMembers.bind(null, scope) as any\n\n\t\tPublic.prototype = {}\n\t\tProtected.prototype = {}\n\t\tPrivate.prototype = {}\n\n\t\t// alows the user to destructure arguments to definer functions\n\t\tPublic.Public = Public\n\t\tPublic.Protected = Protected\n\t\tPublic.Private = Private\n\t\tPublic.Super = Super\n\t\tProtected.Public = Public\n\t\tProtected.Protected = Protected\n\t\tProtected.Private = Private\n\t\tProtected.Super = Super\n\t\t// Private and Super are never passed as first argument\n\n\t\t// pass the helper functions to the user's class definition function\n\t\tdefinition = definition || (definer && definer(Public, Protected, Private, Super))\n\n\t\t// the user has the option of returning an object that defines which\n\t\t// properties are public/protected/private.\n\t\tif (definition && typeof definition !== 'object' && typeof definition !== 'function') {\n\t\t\tthrow new TypeError(`\n                The return value of a class definer function, if any, should be\n                an object, or a class constructor.\n            `)\n\t\t}\n\n\t\t// if a function was returned, we assume it is a class from which we\n\t\t// get the public definition from.\n\t\tlet customClass = null\n\t\tif (typeof definition === 'function') {\n\t\t\tcustomClass = definition\n\t\t\tdefinition = definition.prototype\n\t\t\tParentClass = customClass.prototype.__proto__.constructor\n\t\t}\n\n\t\tlet staticMembers\n\n\t\t// if functions were provided for the public/protected/private\n\t\t// properties of the definition object, execute them with their\n\t\t// respective access helpers, and use the objects returned from them.\n\t\tif (definition) {\n\t\t\tstaticMembers = definition.static\n\t\t\tdelete definition.static\n\n\t\t\tif (typeof definition.public === 'function') {\n\t\t\t\tdefinition.public = definition.public(Protected, Private)\n\t\t\t}\n\n\t\t\tif (typeof definition.protected === 'function') {\n\t\t\t\tdefinition.protected = definition.protected(Public, Private)\n\t\t\t}\n\n\t\t\tif (typeof definition.private === 'function') {\n\t\t\t\tdefinition.private = definition.private(Public, Protected)\n\t\t\t}\n\t\t}\n\n\t\tParentClass = ParentClass || Object\n\n\t\t// extend the parent class\n\t\tconst parentPublicPrototype = ParentClass.prototype\n\t\tconst publicPrototype = (definition && definition.public) || definition || Object.create(parentPublicPrototype)\n\t\tif (publicPrototype.__proto__ !== parentPublicPrototype) publicPrototype.__proto__ = parentPublicPrototype\n\n\t\t// extend the parent protected prototype\n\t\tconst parentProtectedPrototype = getParentProtectedPrototype(parentPublicPrototype)\n\t\tconst protectedPrototype = (definition && definition.protected) || Object.create(parentProtectedPrototype)\n\t\tif (protectedPrototype.__proto__ !== parentProtectedPrototype)\n\t\t\tprotectedPrototype.__proto__ = parentProtectedPrototype\n\t\tpublicProtoToProtectedProto.set(publicPrototype, protectedPrototype)\n\n\t\t// private prototype inherits from parent, but each private instance is\n\t\t// private only for the class of this scope\n\t\tconst parentPrivatePrototype = getParentPrivatePrototype(parentPublicPrototype)\n\t\tconst privatePrototype = (definition && definition.private) || Object.create(parentPrivatePrototype)\n\t\tif (privatePrototype.__proto__ !== parentPrivatePrototype) privatePrototype.__proto__ = parentPrivatePrototype\n\t\tpublicProtoToPrivateProto.set(publicPrototype, privatePrototype)\n\n\t\tif (!brandToPublicPrototypes.get(classBrand)) brandToPublicPrototypes.set(classBrand, new Set())\n\t\tif (!brandToProtectedPrototypes.get(classBrand)) brandToProtectedPrototypes.set(classBrand, new Set())\n\t\tif (!brandToPrivatePrototypes.get(classBrand)) brandToPrivatePrototypes.set(classBrand, new Set())\n\n\t\tbrandToPublicPrototypes.get(classBrand).add(publicPrototype)\n\t\tbrandToProtectedPrototypes.get(classBrand).add(protectedPrototype)\n\t\tbrandToPrivatePrototypes.get(classBrand).add(privatePrototype)\n\n\t\tscope.publicPrototype = publicPrototype\n\t\tscope.privatePrototype = privatePrototype\n\t\tscope.protectedPrototype = protectedPrototype\n\t\tscope.parentPublicPrototype = parentPublicPrototype\n\t\tscope.parentProtectedPrototype = parentProtectedPrototype\n\t\tscope.parentPrivatePrototype = parentPrivatePrototype\n\n\t\t// the user has the option of assigning methods and properties to the\n\t\t// helpers that we passed in, to let us know which methods and\n\t\t// properties are public/protected/private so we can assign them onto\n\t\t// the respective prototypes.\n\t\tcopyDescriptors(Public.prototype, publicPrototype)\n\t\tcopyDescriptors(Protected.prototype, protectedPrototype)\n\t\tcopyDescriptors(Private.prototype, privatePrototype)\n\n\t\tif (definition) {\n\t\t\t// delete these so we don't expose them on the class' public\n\t\t\t// prototype\n\t\t\tdelete definition.public\n\t\t\tdelete definition.protected\n\t\t\tdelete definition.private\n\n\t\t\t// if a `public` object was also supplied, we treat that as the public\n\t\t\t// prototype instead of the base definition object, so we copy the\n\t\t\t// definition's props to the `public` object\n\t\t\t//\n\t\t\t// TODO For now we copy from the definition object to the 'public'\n\t\t\t// object (publicPrototype), but this won't work with native `super`.\n\t\t\t// Maybe later, we can use a Proxy to read props from both the root\n\t\t\t// object and the public object, so that `super` works from both.\n\t\t\t// Another option is to not allow a `public` object, only protected\n\t\t\t// and private\n\t\t\tif (definition !== publicPrototype) {\n\t\t\t\t// copy whatever remains\n\t\t\t\tcopyDescriptors(definition, publicPrototype)\n\t\t\t}\n\t\t}\n\n\t\tif (customClass) {\n\t\t\tif (staticMembers) copyDescriptors(staticMembers, customClass)\n\t\t\treturn customClass\n\t\t}\n\n\t\tconst userConstructor = publicPrototype.hasOwnProperty('constructor') ? publicPrototype.constructor : null\n\n\t\tlet NewClass = null\n\t\tlet newPrototype = null\n\n\t\t// ES5 version (which seems to be so much better)\n\t\tif (mode === 'es5') {\n\t\t\tNewClass = (() =>\n\t\t\t\tfunction (this: any) {\n\t\t\t\t\tlet ret = null\n\n\t\t\t\t\tlet constructor = null\n\n\t\t\t\t\tif (userConstructor) constructor = userConstructor\n\t\t\t\t\telse constructor = ParentClass\n\n\t\t\t\t\t// Object is a special case because otherwise\n\t\t\t\t\t// `Object.apply(this)` returns a different object and we don't\n\t\t\t\t\t// want to deal with return value in that case\n\t\t\t\t\tif (constructor !== Object) ret = constructor.apply(this, arguments)\n\n\t\t\t\t\tif (ret && (typeof ret === 'object' || typeof ret === 'function')) {\n\t\t\t\t\t\t// XXX should we set ret.__proto__ = constructor.prototype\n\t\t\t\t\t\t// here? Or let the user deal with that?\n\t\t\t\t\t\treturn ret\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this\n\t\t\t\t})()\n\n\t\t\tnewPrototype = publicPrototype\n\t\t} else {\n\t\t\tthrow new TypeError(`\n                The lowclass \"mode\" option can only be 'es5' for now.\n            `)\n\t\t}\n\n\t\tif (className) {\n\t\t\tif (nativeNaming) {\n\t\t\t\tconst code = getFunctionBody(NewClass)\n\t\t\t\tconst proto = NewClass.prototype\n\n\t\t\t\tNewClass = new Function(\n\t\t\t\t\t` userConstructor, ParentClass `,\n\t\t\t\t\t`\n                    return function ${className}() { ${code} }\n                `,\n\t\t\t\t)(userConstructor, ParentClass)\n\n\t\t\t\tNewClass.prototype = proto\n\t\t\t} else {\n\t\t\t\tsetDescriptor(NewClass, 'name', {value: className})\n\t\t\t}\n\t\t}\n\n\t\tif (userConstructor && userConstructor.length) {\n\t\t\t// length is not writable, only configurable, therefore the value\n\t\t\t// has to be set with a descriptor update\n\t\t\tsetDescriptor(NewClass, 'length', {\n\t\t\t\tvalue: userConstructor.length,\n\t\t\t})\n\t\t}\n\n\t\t// static stuff {\n\n\t\t// static inheritance\n\t\tNewClass.__proto__ = ParentClass\n\n\t\tif (staticMembers) copyDescriptors(staticMembers, NewClass)\n\n\t\t// allow users to make subclasses. When subclass is called on a\n\t\t// constructor, it defines `this` which is assigned to ParentClass\n\t\t// above.\n\t\tsetDescriptor(NewClass, 'subclass', {\n\t\t\tvalue: Class,\n\t\t\twritable: true,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t})\n\n\t\t// }\n\n\t\t// prototype stuff {\n\n\t\tNewClass.prototype = newPrototype\n\n\t\tNewClass.prototype.constructor = NewClass\n\n\t\t// }\n\n\t\tif (setClassDescriptors) {\n\t\t\tsetDefaultStaticDescriptors(NewClass, options, staticBlacklist)\n\t\t\tsetDescriptor(NewClass, 'prototype', {writable: prototypeWritable})\n\t\t\tsetDefaultPrototypeDescriptors(NewClass.prototype, options)\n\t\t\tsetDefaultPrototypeDescriptors(protectedPrototype, options)\n\t\t\tsetDefaultPrototypeDescriptors(privatePrototype, options)\n\t\t}\n\n\t\tscope.constructor = NewClass // convenient for debugging\n\n\t\treturn NewClass\n\t}\n}\n\n// XXX PERFORMANCE: instead of doing multiple prototype traversals with\n// hasPrototype in the following access helpers, maybe we can do a single\n// traversal and check along the way?\n//\n// Worst case examples:\n//\n//   currently:\n//     If class hierarchy has 20 classes\n//     If we detect which instance we have in order of public, protected, private\n//     If the instance we're checking is the private instance of the middle class (f.e. class 10)\n//     We'll traverse 20 public prototypes with 20 conditional checks\n//     We'll traverse 20 protected prototypes with 20 conditional checks\n//     And finally we'll traverse 10 private prototypes with 10 conditional checks\n//     TOTAL: We traverse over 50 prototypes with 50 conditional checks\n//\n//   proposed:\n//     If class hierarchy has 20 classes\n//     If we detect which instance we have in order of public, protected, private\n//     If the instance we're checking is the private instance of the middle class (f.e. class 10)\n//     We'll traverse 10 public prototypes with 3 conditional checks at each prototype\n//     TOTAL: We traverse over 10 prototypes with 30 conditional checks\n//     BUT: The conditional checking will involve reading WeakMaps instead of\n//     checking just reference equality. If we can optimize how this part\n//     works, it might be worth it.\n//\n// Can the tradeoff (less traversal and conditional checks) outweigh the\n// heavier conditional checks?\n//\n// XXX PERFORMANCE: We can also cache the access-helper results, which requires more memory,\n// but will make use of access helpers much faster, especially important for\n// animations.\n\nfunction getParentProtectedPrototype(parentPublicPrototype: any) {\n\t// look up the prototype chain until we find a parent protected prototype, if any.\n\n\tlet parentProtectedProto\n\tlet currentPublicProto = parentPublicPrototype\n\n\twhile (currentPublicProto && !parentProtectedProto) {\n\t\tparentProtectedProto = publicProtoToProtectedProto.get(currentPublicProto)\n\t\tcurrentPublicProto = currentPublicProto.__proto__\n\t}\n\n\t// TODO, now that we're finding the nearest parent protected proto,\n\t// we might not need to create an empty object for each class if we\n\t// don't find one, to avoid prototype lookup depth, as we'll connect\n\t// to the nearest one we find, if any.\n\treturn parentProtectedProto || {}\n}\n\nfunction getParentPrivatePrototype(parentPublicPrototype: any) {\n\t// look up the prototype chain until we find a parent protected prototype, if any.\n\n\tlet parentPrivateProto\n\tlet currentPublicProto = parentPublicPrototype\n\n\twhile (currentPublicProto && !parentPrivateProto) {\n\t\tparentPrivateProto = publicProtoToPrivateProto.get(currentPublicProto)\n\t\tcurrentPublicProto = currentPublicProto.__proto__\n\t}\n\n\t// TODO, now that we're finding the nearest parent protected proto,\n\t// we might not need to create an empty object for each class if we\n\t// don't find one, to avoid prototype lookup depth, as we'll connect\n\t// to the nearest one we find, if any.\n\treturn parentPrivateProto || {}\n}\n\nfunction getPublicMembers(scope: any, instance: any) {\n\tlet result = scope.cachedPublicAccesses.get(instance)\n\n\tif (result) return result\n\n\t// check only for the private instance of this class scope\n\tif (isPrivateInstance(scope, instance))\n\t\tscope.cachedPublicAccesses.set(instance, (result = getSubclassScope(instance).publicToPrivate.get(instance)))\n\t// check for an instance of the class (or its subclasses) of this scope\n\telse if (isProtectedInstance(scope, instance))\n\t\tscope.cachedPublicAccesses.set(instance, (result = publicToProtected.get(instance)))\n\t// otherwise just return whatever was passed in, it's public already!\n\telse scope.cachedPublicAccesses.set(instance, (result = instance))\n\n\treturn result\n}\n\nfunction getProtectedMembers(scope: any, instance: any) {\n\tlet result = scope.cachedProtectedAccesses.get(instance)\n\n\tif (result) return result\n\n\t// check for an instance of the class (or its subclasses) of this scope\n\t// This allows for example an instance of an Animal base class to access\n\t// protected members of an instance of a Dog child class.\n\tif (isPublicInstance(scope, instance))\n\t\tscope.cachedProtectedAccesses.set(\n\t\t\tinstance,\n\t\t\t(result = publicToProtected.get(instance) || createProtectedInstance(instance)),\n\t\t)\n\t// check for a private instance inheriting from this class scope\n\telse if (isPrivateInstance(scope, instance)) {\n\t\tconst publicInstance = getSubclassScope(instance).publicToPrivate.get(instance)\n\t\tscope.cachedProtectedAccesses.set(\n\t\t\tinstance,\n\t\t\t(result = publicToProtected.get(publicInstance) || createProtectedInstance(publicInstance)),\n\t\t)\n\t}\n\n\t// return the protected instance if it was passed in\n\telse if (isProtectedInstance(scope, instance)) scope.cachedProtectedAccesses.set(instance, (result = instance))\n\n\tif (!result) throw new InvalidAccessError('invalid access of protected member')\n\n\treturn result\n}\n\nfunction getSubclassScope(privateInstance: any) {\n\treturn privateInstanceToClassScope.get(privateInstance)\n}\n\nfunction createProtectedInstance(publicInstance: any) {\n\t// traverse instance proto chain, find first protected prototype\n\tconst protectedPrototype = findLeafmostProtectedPrototype(publicInstance)\n\n\t// make the protected instance from the found protected prototype\n\tconst protectedInstance = Object.create(protectedPrototype)\n\tpublicToProtected.set(publicInstance, protectedInstance)\n\treturn protectedInstance\n}\n\nfunction findLeafmostProtectedPrototype(publicInstance: any) {\n\tlet result = null\n\tlet currentProto = publicInstance.__proto__\n\n\twhile (currentProto) {\n\t\tresult = publicProtoToProtectedProto.get(currentProto)\n\t\tif (result) return result\n\t\tcurrentProto = currentProto.__proto__\n\t}\n\n\treturn result\n}\n\nfunction getPrivateMembers(scope: any, instance: any) {\n\tlet result = scope.cachedPrivateAccesses.get(instance)\n\n\tif (result) return result\n\n\t// check for a public instance that is or inherits from this class\n\tif (isPublicInstance(scope, instance))\n\t\tscope.cachedPrivateAccesses.set(\n\t\t\tinstance,\n\t\t\t(result = scope.publicToPrivate.get(instance) || createPrivateInstance(scope, instance)),\n\t\t)\n\t// check for a protected instance that is or inherits from this class'\n\t// protectedPrototype\n\telse if (isProtectedInstance(scope, instance)) {\n\t\tconst publicInstance = publicToProtected.get(instance)\n\t\tscope.cachedPrivateAccesses.set(\n\t\t\tinstance,\n\t\t\t(result = scope.publicToPrivate.get(publicInstance) || createPrivateInstance(scope, publicInstance)),\n\t\t)\n\t}\n\n\t// return the private instance if it was passed in\n\telse if (isPrivateInstance(scope, instance)) scope.cachedPrivateAccesses.set(instance, (result = instance))\n\n\tif (!result) throw new InvalidAccessError('invalid access of private member')\n\n\treturn result\n}\n\nfunction createPrivateInstance(scope: any, publicInstance: any) {\n\tconst privateInstance = Object.create(scope.privatePrototype)\n\tscope.publicToPrivate.set(publicInstance, privateInstance)\n\tprivateInstanceToClassScope.set(privateInstance, scope) // TODO use WeakTwoWayMap\n\treturn privateInstance\n}\n\nfunction isPublicInstance(scope: any, instance: any, brandedCheck = true) {\n\tif (!brandedCheck) return hasPrototype(instance, scope.publicPrototype)\n\n\tfor (const proto of Array.from(brandToPublicPrototypes.get(scope.classBrand))) {\n\t\tif (hasPrototype(instance, proto)) return true\n\t}\n\n\treturn false\n}\n\nfunction isProtectedInstance(scope: any, instance: any, brandedCheck = true) {\n\tif (!brandedCheck) return hasPrototype(instance, scope.protectedPrototype)\n\n\tfor (const proto of Array.from(brandToProtectedPrototypes.get(scope.classBrand))) {\n\t\tif (hasPrototype(instance, proto)) return true\n\t}\n\n\treturn false\n}\n\nfunction isPrivateInstance(scope: any, instance: any, brandedCheck = true) {\n\tif (!brandedCheck) return hasPrototype(instance, scope.privatePrototype)\n\n\tfor (const proto of Array.from(brandToPrivatePrototypes.get(scope.classBrand))) {\n\t\tif (hasPrototype(instance, proto)) return true\n\t}\n\n\treturn false\n}\n\nfunction superHelper(supers: any, scope: any, instance: any) {\n\tconst {parentPublicPrototype, parentProtectedPrototype, parentPrivatePrototype} = scope\n\n\tif (isPublicInstance(scope, instance, false)) return getSuperHelperObject(instance, parentPublicPrototype, supers)\n\n\tif (isProtectedInstance(scope, instance, false))\n\t\treturn getSuperHelperObject(instance, parentProtectedPrototype, supers)\n\n\tif (isPrivateInstance(scope, instance, false)) return getSuperHelperObject(instance, parentPrivatePrototype, supers)\n\n\tthrow new InvalidSuperAccessError('invalid super access')\n}\n\nfunction getSuperHelperObject(instance: any, parentPrototype: any, supers: any) {\n\tlet _super = supers.get(instance)\n\n\t// XXX PERFORMANCE: there's probably some ways to improve speed here using caching\n\tif (!_super) {\n\t\tsupers.set(instance, (_super = Object.create(parentPrototype)))\n\n\t\tconst keys = getInheritedPropertyNames(parentPrototype)\n\t\tlet i = keys.length\n\n\t\twhile (i--) {\n\t\t\tconst key = keys[i]\n\n\t\t\tsetDescriptor(\n\t\t\t\t_super,\n\t\t\t\tkey,\n\t\t\t\t{\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tlet value: any = void undefined\n\n\t\t\t\t\t\tconst descriptor = getInheritedDescriptor(parentPrototype, key)\n\n\t\t\t\t\t\tif (descriptor && propertyIsAccessor(descriptor)) {\n\t\t\t\t\t\t\tconst getter = descriptor.get\n\t\t\t\t\t\t\tif (getter) value = getter.call(instance)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalue = parentPrototype[key]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value && value.call && typeof value === 'function') {\n\t\t\t\t\t\t\tvalue = value.bind(instance)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn value\n\t\t\t\t\t},\n\n\t\t\t\t\t// like native `super`, setting a super property does nothing.\n\t\t\t\t\tset: function (value) {\n\t\t\t\t\t\tconst descriptor = getInheritedDescriptor(parentPrototype, key)\n\n\t\t\t\t\t\tif (descriptor && propertyIsAccessor(descriptor)) {\n\t\t\t\t\t\t\tconst setter = descriptor.set\n\t\t\t\t\t\t\tif (setter) value = setter.call(instance, value)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// just like native `super`\n\t\t\t\t\t\t\tinstance[key] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}\n\t}\n\n\treturn _super\n}\n\nexport default Class\n","import type {Constructor} from './utils.js'\n\n// --- TODO handle static inheritance. Nothing has been implemented with regards to\n// static inheritance yet.\n\n// --- TODO allow the subclass (f.e. the `Foo` in `class Foo extends multiple(One,\n// Two, Three) {}`) to call each super constructor (One, Two, and Three)\n// individually with specific arguments.\n\n// --- TODO Prevent duplicate classes in the \"prototype tree\". F.e. if someone calls\n// `multiple(One, Two, Three)`, and `Three` already includes `Two`, we can\n// discard the `Two` argument and perform the combination as if `multiple(One,\n// Three)` had been called.\n\n// --- TODO cache the results, so more than one call to `multiple(One, Two, Three)`\n// returns the same class reference as the first call.\n\n// --- TODO, allow the user to handle the diamond problem in some way other than\n// (\"property or method from the first class in the list wins\"). Perhaps require\n// the user to specify which method to call. For now, it simply calls the first\n// method in the order in which the classes were passed into multiple(). Look\n// here for ideas based on how different languages handle it:\n// https://en.wikipedia.org/wiki/Multiple_inheritance#The_diamond_problem\n\nenum ImplementationMethod {\n\tPROXIES_ON_INSTANCE_AND_PROTOTYPE = 'PROXIES_ON_INSTANCE_AND_PROTOTYPE',\n\tPROXIES_ON_PROTOTYPE = 'PROXIES_ON_PROTOTYPE',\n\n\t// TODO, This will be similar to PROXIES_ON_INSTANCE_AND_PROTOTYPE, but\n\t// instead of placing a proxy on the instance, place a Proxy as a direct\n\t// prototype of the instance. I think this should work with Custom Elements,\n\t// and unlike PROXIES_ON_PROTOTYPE, super calls won't access own properties\n\t// on the instance, but actually on the prototypes (test5 super access tests\n\t// fail with PROXIES_ON_PROTOTYPE method).\n\tPROXY_AFTER_INSTANCE_AND_PROTOTYPE = 'PROXY_AFTER_INSTANCE_AND_PROTOTYPE',\n}\n\ntype MultipleOptions = {\n\tmethod: ImplementationMethod\n}\n\nexport function makeMultipleHelper(options?: MultipleOptions) {\n\t/**\n\t * Mixes the given classes into a single class. This is useful for multiple\n\t * inheritance.\n\t *\n\t * @example\n\t * class Foo {}\n\t * class Bar {}\n\t * class Baz {}\n\t * class MyClass extends multiple(Foo, Bar, Baz) {}\n\t */\n\t//  ------------ method 1, define the `multiple()` signature with overrides. The\n\t//  upside is it is easy to understand, but the downside is that name collisions\n\t//  in properties cause the collided property type to be `never`. This would make\n\t//  it more difficult to provide solution for the diamond problem.\n\t//  ----------------\n\t// function multiple(): typeof Object\n\t// function multiple<T extends Constructor>(classes: T): T\n\t// function multiple<T extends Constructor[]>(...classes: T): Constructor<ConstructorUnionToInstanceTypeUnion<T[number]>>\n\t// function multiple(...classes: any): any {\n\t//\n\t//  ------------ method 2, define the signature of `multiple()` with a single\n\t//  signature. The upside is this picks the type of the first property\n\t//  encountered when property names collide amongst all the classes passed into\n\t//  `multiple()`, but the downside is the inner implementation may require\n\t//  casting, and this approach can also cause an infinite type recursion\n\t//  depending on the types used inside the implementation.\n\t//  ----------------\n\treturn function multiple<T extends Constructor[]>(...classes: T): CombinedClasses<T> {\n\t\tconst mode = (options && options.method) || ImplementationMethod.PROXIES_ON_INSTANCE_AND_PROTOTYPE\n\n\t\tswitch (mode) {\n\t\t\tcase ImplementationMethod.PROXIES_ON_INSTANCE_AND_PROTOTYPE: {\n\t\t\t\treturn (withProxiesOnThisAndPrototype as any)(...classes)\n\t\t\t}\n\t\t\tcase ImplementationMethod.PROXIES_ON_PROTOTYPE: {\n\t\t\t\treturn (withProxiesOnPrototype as any)(...classes)\n\t\t\t}\n\t\t\tcase ImplementationMethod.PROXY_AFTER_INSTANCE_AND_PROTOTYPE: {\n\t\t\t\tthrow new Error(' not implemented yet')\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Mixes the given classes into a single class. This is useful for multiple\n * inheritance.\n *\n * @example\n * class Foo {}\n * class Bar {}\n * class Baz {}\n * class MyClass extends multiple(Foo, Bar, Baz) {}\n */\nexport const multiple = makeMultipleHelper({method: ImplementationMethod.PROXIES_ON_INSTANCE_AND_PROTOTYPE})\n// export const multiple = makeMultipleHelper({method: ImplementationMethod.PROXIES_ON_PROTOTYPE})\n\nfunction withProxiesOnThisAndPrototype<T extends Constructor[]>(...classes: T): CombinedClasses<T> {\n\t// avoid performance costs in special cases\n\tif (classes.length === 0) return Object as any\n\tif (classes.length === 1) return classes[0] as any\n\n\tconst FirstClass = classes.shift()!\n\n\t// inherit the first class normally. This allows for required native\n\t// inheritance in certain special cases (like inheriting from HTMLElement\n\t// when making Custom Elements).\n\tclass MultiClass extends FirstClass {\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(...args)\n\n\t\t\tconst instances: Object[] = []\n\n\t\t\t// make instances of the other classes to get/set properties on.\n\t\t\tlet Ctor: Constructor\n\t\t\tfor (let i = 0, l = classes.length; i < l; i += 1) {\n\t\t\t\tCtor = classes[i]\n\t\t\t\tconst instance = Reflect.construct(Ctor, args)\n\t\t\t\tinstances.push(instance)\n\t\t\t}\n\n\t\t\treturn new Proxy(this, {\n\t\t\t\t// No `set()` trap is needed in this Proxy handler, at least for\n\t\t\t\t// the tests so far. Methods automatically have the correct\n\t\t\t\t// receiver when the are gotten with the `get()` trap, so if any\n\t\t\t\t// methods set a property, the set happens on the expected\n\t\t\t\t// instance, just like regular [[Set]].\n\n\t\t\t\tget(target, key: string | symbol, self: MultiClass): any {\n\t\t\t\t\tif (Reflect.ownKeys(target).includes(key)) return Reflect.get(target, key, self)\n\n\t\t\t\t\tlet instance: Object\n\n\t\t\t\t\tfor (let i = 0, l = instances.length; i < l; i += 1) {\n\t\t\t\t\t\tinstance = instances[i]\n\t\t\t\t\t\tif (Reflect.ownKeys(instance).includes(key)) return Reflect.get(instance, key, self)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst proto = Object.getPrototypeOf(self)\n\t\t\t\t\tif (Reflect.has(proto, key)) return Reflect.get(proto, key, self)\n\n\t\t\t\t\treturn undefined\n\t\t\t\t},\n\n\t\t\t\townKeys(target) {\n\t\t\t\t\tlet keys = Reflect.ownKeys(target)\n\n\t\t\t\t\tlet instance: Object\n\t\t\t\t\tlet instanceKeys: (string | symbol)[]\n\n\t\t\t\t\tfor (let i = 0, l = instances.length; i < l; i += 1) {\n\t\t\t\t\t\tinstance = instances[i]\n\t\t\t\t\t\tinstanceKeys = Reflect.ownKeys(instance)\n\t\t\t\t\t\tfor (let j = 0, l = instanceKeys.length; j < l; j += 1) keys.push(instanceKeys[j])\n\t\t\t\t\t}\n\n\t\t\t\t\treturn keys\n\t\t\t\t},\n\n\t\t\t\t// This makes the `in` operator work, for example.\n\t\t\t\thas(target, key: string | symbol): boolean {\n\t\t\t\t\tif (Reflect.ownKeys(target).includes(key)) return true\n\n\t\t\t\t\tlet instance: Object\n\t\t\t\t\tfor (let i = 0, l = instances.length; i < l; i += 1) {\n\t\t\t\t\t\tinstance = instances[i]\n\t\t\t\t\t\tif (Reflect.ownKeys(instance).includes(key)) return true\n\t\t\t\t\t}\n\n\t\t\t\t\t// all instances share the same prototype, so just check it once\n\t\t\t\t\tconst proto = Object.getPrototypeOf(self)\n\t\t\t\t\tif (Reflect.has(proto, key)) return true\n\n\t\t\t\t\treturn false\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}\n\n\tconst newMultiClassPrototype = new Proxy(Object.create(FirstClass.prototype), {\n\t\tget(target, key: string | symbol, self: MultiClass): any {\n\t\t\tif (Reflect.has(target, key)) return Reflect.get(target, key, self)\n\n\t\t\tlet Class: Constructor\n\t\t\tfor (let i = 0, l = classes.length; i < l; i += 1) {\n\t\t\t\tClass = classes[i]\n\t\t\t\tif (Reflect.has(Class.prototype, key)) return Reflect.get(Class.prototype, key, self)\n\t\t\t}\n\t\t},\n\n\t\thas(target, key): boolean {\n\t\t\tif (Reflect.has(target, key)) return true\n\n\t\t\tlet Class: Constructor\n\t\t\tfor (let i = 0, l = classes.length; i < l; i += 1) {\n\t\t\t\tClass = classes[i]\n\t\t\t\tif (Reflect.has(Class.prototype, key)) return true\n\t\t\t}\n\n\t\t\treturn false\n\t\t},\n\t})\n\n\t// This is so that `super` calls will work. We can't replace\n\t// MultiClass.prototype with a Proxy because MultiClass.prototype is\n\t// non-configurable, so it is impossible to wrap it with a Proxy. Instead,\n\t// we stick our own custom Proxy-wrapped prototype object between\n\t// MultiClass.prototype and FirstClass.prototype.\n\tObject.setPrototypeOf(MultiClass.prototype, newMultiClassPrototype)\n\n\treturn MultiClass as unknown as CombinedClasses<T>\n}\n\nlet currentSelf: Object[] = []\n\nconst __instances__ = new WeakMap<object, Object[]>()\nconst getInstances = (inst: object): Object[] => {\n\tlet result = __instances__.get(inst)\n\tif (!result) __instances__.set(inst, (result = []))\n\treturn result\n}\n\n// function hasKey(instance: object, key: string | number | symbol, traverse: boolean = true): boolean {\n// \tif (Reflect.ownKeys(instance).includes(key)) return true\n\n// \tif (!traverse) return false\n\n// \tconst instances = __instances__.get(instance)\n// \tif (!instances) return false\n\n// \tfor (const instance of instances) if (hasKey(instance, key, true)) return true\n\n// \treturn false\n// }\n\ntype GetResult = {has: boolean; value: any}\n\nconst getResult: GetResult = {has: false, value: undefined}\n\nfunction getFromInstance(instance: object, key: string | symbol, result: GetResult): void {\n\tresult.has = false\n\tresult.value = undefined\n\n\tif (Reflect.ownKeys(instance).includes(key)) {\n\t\tresult.has = true\n\t\tresult.value = Reflect.get(instance, key)\n\t\treturn\n\t}\n\n\tconst instances = __instances__.get(instance)\n\tif (!instances) return\n\n\tfor (const instance of instances) {\n\t\t// if (hasKey(instance, key, true)) {\n\t\t//     getFromInstance(instance, key, result)\n\t\t//     return\n\t\t// }\n\n\t\tgetFromInstance(instance, key, result)\n\t\tif (result.has) return\n\t}\n}\n\nlet shouldGetFromPrototype = false\nlet topLevelMultiClassPrototype: object | null = null\n\nfunction withProxiesOnPrototype<T extends Constructor[]>(...classes: T): CombinedClasses<T> {\n\t// avoid performance costs in special cases\n\tif (classes.length === 0) return Object as any\n\tif (classes.length === 1) return classes[0] as any\n\n\tconst FirstClass = classes.shift()!\n\n\t// inherit the first class normally. This allows for required native\n\t// inheritance in certain special cases (like inheriting from HTMLElement\n\t// when making Custom Elements).\n\tclass MultiClass extends FirstClass {\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(...args)\n\n\t\t\t// This assumes no super constructor returns a different this from\n\t\t\t// their constructor. Otherwise the getInstances call won't work as\n\t\t\t// expected.\n\t\t\tconst instances = getInstances(this)\n\n\t\t\t// make instances of the other classes to get/set properties on.\n\t\t\tfor (const Ctor of classes) {\n\t\t\t\tconst instance = Reflect.construct(Ctor, args)\n\t\t\t\tinstances.push(instance)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst newMultiClassPrototype = new Proxy(Object.create(FirstClass.prototype), {\n\t\tget(target, key: string | symbol, self: MultiClass): any {\n\t\t\tif (!topLevelMultiClassPrototype) topLevelMultiClassPrototype = target\n\n\t\t\tif (!shouldGetFromPrototype) {\n\t\t\t\tgetFromInstance(self, key, getResult)\n\n\t\t\t\tif (getResult.has) {\n\t\t\t\t\ttopLevelMultiClassPrototype = null\n\t\t\t\t\treturn getResult.value\n\t\t\t\t}\n\n\t\t\t\t// only the top level MultiClass subclass prototype will check\n\t\t\t\t// instances for a property. The superclass MultiClass\n\t\t\t\t// prototypes will do a regular prototype get.\n\t\t\t\tshouldGetFromPrototype = true\n\t\t\t}\n\n\t\t\t// TODO, I think instead of passing `self` we should be passing the\n\t\t\t// instances created from the classes? We need to write more tests,\n\t\t\t// especially ones that create new properties later and not at\n\t\t\t// construction time.\n\t\t\tif (shouldGetFromPrototype) {\n\t\t\t\tlet result: any = undefined\n\n\t\t\t\tif (Reflect.has(target, key)) result = Reflect.get(target, key, self)\n\n\t\t\t\tlet Class: Constructor\n\t\t\t\tfor (let i = 0, l = classes.length; i < l; i += 1) {\n\t\t\t\t\tClass = classes[i]\n\t\t\t\t\tif (Reflect.has(Class.prototype, key)) result = Reflect.get(Class.prototype, key, self)\n\t\t\t\t}\n\n\t\t\t\tif (topLevelMultiClassPrototype === target) {\n\t\t\t\t\ttopLevelMultiClassPrototype = null\n\t\t\t\t\tshouldGetFromPrototype = false\n\t\t\t\t}\n\n\t\t\t\treturn result\n\t\t\t}\n\n\t\t\t// currentSelf.push(self)\n\n\t\t\t// if (Reflect.ownKeys(self).includes(key)) {\n\t\t\t// \tcurrentSelf.pop()\n\t\t\t// \treturn Reflect.get(target, key, self)\n\t\t\t// }\n\n\t\t\t// currentSelf.pop()\n\n\t\t\t// for (const instance of getInstances(self)) {\n\t\t\t// \tcurrentSelf.push(instance)\n\n\t\t\t// \tif (Reflect.ownKeys(instance).includes(key)) {\n\t\t\t// \t\tcurrentSelf.pop()\n\t\t\t// \t\treturn Reflect.get(instance, key, instance)\n\t\t\t// \t}\n\n\t\t\t// \tcurrentSelf.pop()\n\t\t\t// }\n\n\t\t\t// return undefined\n\t\t},\n\n\t\tset(target, key: string | symbol, value: any, self): boolean {\n\t\t\tcurrentSelf.push(self)\n\n\t\t\t// If the key is in the current prototype chain, continue like normal...\n\t\t\tif (Reflect.has(target, key)) {\n\t\t\t\tcurrentSelf.pop()\n\t\t\t\treturn Reflect.set(target, key, value, self)\n\t\t\t}\n\n\t\t\tcurrentSelf.pop()\n\n\t\t\t// ...Otherwise if the key isn't, set it on one of the instances of the classes.\n\t\t\tfor (const instance of getInstances(self)) {\n\t\t\t\tcurrentSelf.push(instance)\n\n\t\t\t\tif (Reflect.has(instance, key)) {\n\t\t\t\t\tcurrentSelf.pop()\n\t\t\t\t\treturn Reflect.set(instance, key, value, instance)\n\t\t\t\t\t// return Reflect.set(instance, key, value, self)\n\t\t\t\t}\n\n\t\t\t\tcurrentSelf.pop()\n\t\t\t}\n\n\t\t\t// If the key is not found, set it like normal.\n\t\t\treturn Reflect.set(target, key, value, self)\n\t\t},\n\n\t\thas(target, key): boolean {\n\t\t\t// if (currentSelf.length) {\n\t\t\t// \tlet current = currentSelf[currentSelf.length - 1]\n\n\t\t\t// \twhile (current) {\n\t\t\t// \t\tif (Reflect.ownKeys(current).includes(key)) return true\n\t\t\t// \t\tcurrent = Reflect.getPrototypeOf(current) as MultiClass\n\t\t\t// \t}\n\n\t\t\t// \tfor (const instance of getInstances(current as MultiClass))\n\t\t\t// \t\tif (Reflect.has(instance, key)) return true\n\t\t\t// } else {\n\t\t\tif (Reflect.has(target, key)) return true\n\n\t\t\tlet Class: Constructor\n\t\t\tfor (let i = 0, l = classes.length; i < l; i += 1) {\n\t\t\t\tClass = classes[i]\n\t\t\t\tif (Reflect.has(Class.prototype, key)) return true\n\t\t\t}\n\t\t\t// }\n\n\t\t\treturn false\n\t\t},\n\t})\n\n\t// This is so that `super` calls will work. We can't replace\n\t// MultiClass.prototype with a Proxy because MultiClass.prototype is\n\t// non-configurable, so it is impossible to wrap it with a Proxy. Instead,\n\t// we stick our own custom Proxy-wrapped prototype object between\n\t// MultiClass.prototype and FirstClass.prototype.\n\tObject.setPrototypeOf(MultiClass.prototype, newMultiClassPrototype)\n\n\treturn MultiClass as unknown as CombinedClasses<T>\n}\n\n// type ConstructorUnionToInstanceTypeUnion<U> = (U extends Constructor\n//   ? (k: InstanceType<U>) => void\n//   : never) extends (k: infer I) => void\n//     ? I\n//     : never\n\ntype Shift<T extends any[]> = ((...args: T) => any) extends (_: any, ...args: infer R) => any ? R : never\ntype MixedArray<T extends Constructor<any>[]> = _MixedArray<T, {}>\ntype _MixedArray<T extends Constructor<any>[], U> = {\n\t0: new () => U\n\t1: _MixedArray<\n\t\tShift<T>,\n\t\t{\n\t\t\t[K in keyof InstanceType<T[0]> | keyof U]: K extends keyof U ? U[K] : InstanceType<T[0]>[K]\n\t\t}\n\t>\n}[T['length'] extends 0 ? 0 : 1]\n\ntype CombinedClasses<T> = T extends [] | [undefined]\n\t? typeof Object\n\t: T extends Constructor[]\n\t? MixedArray<T>\n\t: typeof Object\n","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        unowned = fn.length === 0,\n        root = unowned && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  },\n        updateFn = unowned ? fn : () => fn(() => cleanNode(root));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.pending !== NOTPENDING ? s.pending : s.tValue);else value = value(s.pending !== NOTPENDING ? s.pending : s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(source, fetcher, options) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = source;\n      source = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = source;\n    source = true;\n  }\n  options || (options = {});\n  const contexts = new Set(),\n        [value, setValue] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.load) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, e, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if (initP && (p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = null;\n      setError(err = e);\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      setValue(() => v);\n      setLoading(false);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching && scheduled) return;\n    scheduled = false;\n    setError(err = undefined);\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        if (err) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) !== fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  let result;\n  const q = Pending = [];\n  try {\n    result = fn();\n  } finally {\n    Pending = null;\n  }\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    batch(fn);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    const updates = Updates;\n    Updates = null;\n    !runningTransition && this.state === STALE || runningTransition && this.tState === STALE ? updateComputation(this) : lookUpstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  if (Pending) {\n    if (node.pending === NOTPENDING) Pending.push(node);\n    node.pending = value;\n    return value;\n  }\n  if (node.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(node)) {\n      if (node.comparator(node.tValue, value)) return value;\n    } else if (node.comparator(node.value, value)) return value;\n  }\n  let TransitionRunning = false;\n  if (Transition) {\n    TransitionRunning = Transition.running;\n    if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n      Transition.sources.add(node);\n      node.tValue = value;\n    }\n    if (!TransitionRunning) node.value = value;\n  } else node.value = value;\n  if (node.observers && node.observers.length) {\n    runUpdates(() => {\n      for (let i = 0; i < node.observers.length; i += 1) {\n        const o = node.observers[i];\n        if (TransitionRunning && Transition.disposed.has(o)) continue;\n        if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n          if (o.pure) Updates.push(o);else Effects.push(o);\n          if (o.observers) markDownstream(o);\n        }\n        if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        if (false) ;\n        throw new Error();\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        runComputation(node, node.tValue, time);\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      lookUpstream(node, ancestors[0]);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!Updates) Effects = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size || Transition.queue.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    const disposed = Transition.disposed;\n    res = Transition.resolve;\n    for (const e of Effects) {\n      \"tState\" in e && (e.state = e.tState);\n      delete e.tState;\n    }\n    Transition = null;\n    batch(() => {\n      for (const d of disposed) cleanNode(d);\n      for (const v of sources) {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n        v.tState = 0;\n      }\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n          if (!tasks.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  for (const f of fns) f(err);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    let res;\n    createComputed(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }));\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === 'function' ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createComputed(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return (s = typeof s === \"function\" ? s() : s) == null ? {} : s;\n}\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = resolveSource(sources[i])[property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in resolveSource(sources[i])) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        }\n      });\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, {\n    equals: (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nconst NoErrors = {};\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn(NoErrors));\n}\nfunction ErrorBoundary(props) {\n  let err = NoErrors;\n  if (sharedConfig.context && sharedConfig.load) {\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count) || NoErrors;\n  }\n  const [errored, setErrored] = createSignal(err);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if ((e = errored()) !== NoErrors) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(NoErrors))) : f;\n    }\n    onError(setErrored);\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let suspenseSetter, showContent, showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const [registry, setRegistry] = createSignal([]),\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        setRegistry(registry => [...registry, {\n          inFallback,\n          showContent,\n          showFallback\n        }]);\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reg = registry(),\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      reg.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = reg[n].inFallback();\n      if (!stop && !s) {\n        reg[n].showContent(visibleContent);\n        reg[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          reg[n].showFallback(visibleFallback);\n        } else reg[n].showFallback(false);\n        stop = true;\n        reg[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    p = sharedConfig.load(key);\n    if (p) {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if ((error = err) || sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    } else if (p === null) sharedConfig.gather(key);\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === undefined) setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(() => {\n          const inFallback = store.inFallback(),\n                visibleContent = showContent ? showContent() : true,\n                visibleFallback = showFallback ? showFallback() : true;\n          dispose && dispose();\n          if ((!inFallback || p !== undefined) && visibleContent) {\n            store.resolved = true;\n            ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!visibleFallback) return;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import {getInheritedDescriptor} from 'lowclass'\nimport {createSignal, createEffect, createRoot, untrack, getListener} from 'solid-js'\n\nexport interface VariableGetter<T> {\n\t(): T\n}\n\nexport interface VariableSetter<T> {\n\t(value: T): T\n}\n\n/** Represents a reactive variable. The value is set or gotten depending on passing an arg or no arg. */\nexport interface Variable<T = any> extends Iterable<VariableGetter<T> | VariableSetter<T>> {\n\t/** Gets the variable value. */\n\t(value?: undefined): T\n\t/** Sets the variable value. */\n\t(value: T): T\n\t(value?: T): void | T\n\n\tget: VariableGetter<T>\n\tset: VariableSetter<T>\n\n\t// For array destructuring convenience\n\t[0]: VariableGetter<T>\n\t[1]: VariableSetter<T>\n\t[Symbol.iterator](): IterableIterator<VariableGetter<T> | VariableSetter<T>>\n}\n\nfunction readVariable<T>(this: Variable<T>): T {\n\treturn this()\n}\nfunction writeVariable<T>(this: Variable<T>, value: T): T {\n\treturn this(value)\n}\n\n/**\n * Create a reactive variable.\n *\n * @example\n * let count = variable(0) // count starts at 0\n * count(1) // set the value of count to 1\n * count(count() + 1) // add 1\n * let currentValue = count() // read the current value\n * console.log(currentValue) // logs \"2\" to console\n */\n// eslint-disable-next-line typescript/explicit-function-return-type\nexport function variable<T>(value: T) {\n\tconst [get, set] = createSignal<T>(value, {equals: false})\n\n\t// FIXME, read arguments.length instead of detecting undefined values, because currently undefined value trigger a read, which means decoraators built on this treat `this.foo = undefined` as a read instead of a write.\n\tconst variable = ((value?: T) => {\n\t\tif (typeof value === 'undefined') return get()\n\t\tset(() => value)\n\t\treturn value\n\t}) as Variable<T>\n\n\t// WTF TypeScript, why do I need `any` here.\n\tconst getter = readVariable.bind(variable as any) as VariableGetter<T>\n\tconst setter = writeVariable.bind(variable as any) as VariableSetter<T>\n\n\t// For object destructuring convenience.\n\tvariable.get = getter\n\tvariable.set = setter\n\n\t// For array destructuring convenience.\n\tvariable[0] = getter\n\tvariable[1] = setter\n\tvariable[Symbol.iterator] = function* () {\n\t\tyield variable[0]\n\t\tyield variable[1]\n\t}\n\n\treturn variable as [VariableGetter<T>, VariableSetter<T>] & Variable<T>\n}\n\nexport type Computation = (previousValue?: unknown) => unknown\nexport type StopFunction = () => void\n\n/**\n * Automatically run a \"computation\" when any reactive variable used inside the\n * computation has changed. The \"computation\" is a function passed into\n * autorun().\n *\n * @param {Computation} f - A \"computation\" to re-run when any of the reactive\n * variables used inside of it change.\n * @return {StopFunction} - Returns a function that can be called to explicitly\n * stop the computation from running, allowing it to be garbage collected.\n */\n// TODO Option for autorun() to batch updates into a single update in the next microtask.\n// TODO Option for autorun() to skip the first run.\n// TODO Option for autorun() to provide which properties caused the re-run.\nexport function autorun(f: Computation): StopFunction {\n\tlet stop: StopFunction\n\n\tcreateRoot(dispose => {\n\t\tstop = dispose\n\t\tcreateEffect(f)\n\t})\n\n\treturn stop!\n}\n\nexport function reactive(protoOrClassElement: any, propName?: string, _descriptor?: PropertyDescriptor): any {\n\t// If used as a newer Babel decorator\n\tconst isDecoratorV2 = arguments.length === 1 && 'kind' in protoOrClassElement\n\tif (isDecoratorV2) {\n\t\tconst classElement = protoOrClassElement\n\n\t\t// If used as a class decorator.\n\t\tif (classElement.kind === 'class') return {...classElement, finisher: reactiveClassFinisher}\n\n\t\t// If used as a property or accessor decorator (@reactive isn't intended for\n\t\t// methods).\n\t\treturn {\n\t\t\t...classElement,\n\t\t\tfinisher(Class: AnyClassWithReactiveProps) {\n\t\t\t\t_trackReactiveProperty(Class, classElement.key)\n\n\t\t\t\treturn classElement.finisher?.(Class) ?? Class\n\t\t\t},\n\t\t}\n\t}\n\n\t// Used as a v1 legacy decorator.\n\n\t// If used as a class decorator.\n\tif (arguments.length === 1 && typeof protoOrClassElement === 'function') {\n\t\tconst Class = protoOrClassElement\n\t\treturn reactiveClassFinisher(Class)\n\t}\n\n\t// If used as a property or accessor decorator (this isn't intended for\n\t// methods).\n\tconst Class = protoOrClassElement.constructor\n\t_trackReactiveProperty(Class, propName!)\n}\n\nexport function _trackReactiveProperty(Class: AnyClassWithReactiveProps, propName: string) {\n\tif (!Class.reactiveProperties || !Class.hasOwnProperty('reactiveProperties')) Class.reactiveProperties = []\n\tif (!Class.reactiveProperties.includes(propName)) Class.reactiveProperties.push(propName)\n}\n\nfunction reactiveClassFinisher(Class: AnyClassWithReactiveProps) {\n\tif (Class.hasOwnProperty('__isReactive__')) return Class\n\n\treturn class ReactiveDecoratorFinisher extends Class {\n\t\t// This is a flag that other decorators can check, f.e. lume/elements @element decorator.\n\t\tstatic __isReactive__: true = true\n\n\t\tconstructor(...args: any[]) {\n\t\t\tif (getListener()) {\n\t\t\t\treturn untrack(() => {\n\t\t\t\t\tconst self = Reflect.construct(Class, args, new.target) // super()\n\t\t\t\t\treactify(self, Class)\n\t\t\t\t\treturn self\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tsuper(...args)\n\t\t\treactify(this, Class)\n\t\t}\n\t}\n}\n\nfunction _reactive(obj: ObjWithReactifiedProps, propName: PropertyKey): void {\n\tif (typeof propName !== 'string') throw new Error('TODO: support for non-string fields with @reactive decorator')\n\n\tconst vName = 'v_' + propName\n\n\t// XXX If obj already has vName, skip making an accessor? I think perhaps\n\t// not, because a subclass might override a property so it is not reactive,\n\t// and a further subclass might want to make it reactive again in which\n\t// case returning early would cause the subclass subclass's property not to\n\t// be reactive.\n\t// if (obj[vName] !== undefined) return\n\n\tlet descriptor: PropertyDescriptor | undefined = getInheritedDescriptor(obj, propName)\n\n\tlet originalGet: (() => any) | undefined\n\tlet originalSet: ((v: any) => void) | undefined\n\tlet initialValue: unknown\n\n\t// TODO if there is an inherited accessor, we need to ensure we still call\n\t// it so that we're extending instead of overriding. Otherwise placing\n\t// @reactive on a property will break that functionality in those cases.\n\t//\n\t// Right now, originalGet will only be called if it is on the current\n\t// prototype, but we aren't checking for any accessor that may be inherited.\n\n\tif (descriptor) {\n\t\toriginalGet = descriptor.get\n\t\toriginalSet = descriptor.set\n\n\t\tif (originalGet || originalSet) {\n\t\t\t// reactivity requires both\n\t\t\tif (!originalGet || !originalSet) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The `@reactive` decorator was used on an accessor named \"' +\n\t\t\t\t\t\tpropName +\n\t\t\t\t\t\t'\" which had a getter or a setter, but not both. Reactivity on accessors works only when accessors have both get and set. In this case the decorator does not do anything.',\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tdelete descriptor.get\n\t\t\tdelete descriptor.set\n\t\t} else {\n\t\t\tinitialValue = descriptor.value\n\n\t\t\t// if it isn't writable, we don't need to make a reactive variable because\n\t\t\t// the value won't change\n\t\t\tif (!descriptor.writable) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The `@reactive` decorator was used on a property named ' +\n\t\t\t\t\t\tpropName +\n\t\t\t\t\t\t' that is not writable. Reactivity is not enabled for non-writable properties.',\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tdelete descriptor.value\n\t\t\tdelete descriptor.writable\n\t\t}\n\t}\n\n\tdescriptor = {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\t...descriptor,\n\t\tget: originalGet\n\t\t\t? function (this: any): unknown {\n\t\t\t\t\t// track reactivity, but get the value from the original getter\n\n\t\t\t\t\t// XXX this causes initialValue to be held onto even if the original\n\t\t\t\t\t// prototype value has changed. In pratice the original prototype\n\t\t\t\t\t// values usually never change, and these days people don't normally\n\t\t\t\t\t// use prototype values to begin with.\n\t\t\t\t\tconst v = __getReactiveVar(this, vName, initialValue)\n\t\t\t\t\tv()\n\n\t\t\t\t\treturn originalGet!.call(this)\n\t\t\t  }\n\t\t\t: function (this: any): unknown {\n\t\t\t\t\tconst v = __getReactiveVar(this, vName, initialValue)\n\t\t\t\t\treturn v()\n\t\t\t  },\n\t\tset: originalSet\n\t\t\t? function (this: any, newValue: unknown) {\n\t\t\t\t\toriginalSet!.call(this, newValue)\n\n\t\t\t\t\tconst v = __getReactiveVar(this, vName)\n\t\t\t\t\tv(newValue)\n\n\t\t\t\t\t// __propsSetAtLeastOnce__ is a Set that tracks which reactive\n\t\t\t\t\t// properties have been set at least once. @lume/element uses this\n\t\t\t\t\t// to detect if a reactive prop has been set, and if so will not\n\t\t\t\t\t// overwrite the value with any value from custom element\n\t\t\t\t\t// pre-upgrade.\n\t\t\t\t\tif (!this.__propsSetAtLeastOnce__) this.__propsSetAtLeastOnce__ = new Set<string>()\n\t\t\t\t\tthis.__propsSetAtLeastOnce__.add(propName)\n\t\t\t  }\n\t\t\t: function (this: any, newValue: unknown) {\n\t\t\t\t\tconst v = __getReactiveVar(this, vName)\n\t\t\t\t\tv(newValue)\n\n\t\t\t\t\tif (!this.__propsSetAtLeastOnce__) this.__propsSetAtLeastOnce__ = new Set<string>()\n\t\t\t\t\tthis.__propsSetAtLeastOnce__.add(propName)\n\t\t\t  },\n\t}\n\n\tif (!obj.__reactifiedProps__) obj.__reactifiedProps__ = new Set()\n\tobj.__reactifiedProps__.add(propName)\n\n\tObject.defineProperty(obj, propName, descriptor)\n}\n\nfunction __getReactiveVar<T>(instance: Obj<Variable<T>>, vName: string, initialValue: T = undefined!): Variable<T> {\n\t// NOTE alternatively, we could use a WeakMap instead of exposing the\n\t// variable on the instance. We could also use Symbols keys for\n\t// semi-privacy.\n\tlet v: Variable<T> = instance[vName]\n\n\tif (v) return v\n\n\tinstance[vName] = v = variable<T>(initialValue)\n\n\treturn v\n}\n\ntype AnyClass = new (...args: any[]) => object\ntype AnyClassWithReactiveProps = (new (...args: any[]) => object) & {\n\treactiveProperties?: string[]\n\t__isReactive__?: true\n}\n\n// Define (or unshadow) reactive accessors on obj, which is generally `this`\n// inside of a constructor (this is what the documentation prescribes).\nexport function reactify<T>(obj: T, props: (keyof T)[]): typeof obj\nexport function reactify<C extends AnyClass>(obj: InstanceType<C>, ctor: C): typeof obj\nexport function reactify(obj: Obj, propsOrClass: PropertyKey[] | AnyClassWithReactiveProps) {\n\tif (isClass(propsOrClass)) {\n\t\tconst Class = propsOrClass\n\n\t\t// let props = classReactiveProps.get(Class)\n\t\t// if (props) unshadowReactiveAccessors(obj, props)\n\t\t// props = Class.reactiveProperties\n\n\t\tconst props = Class.reactiveProperties\n\t\tif (Array.isArray(props)) createReactiveAccessors(obj, props)\n\t} else {\n\t\tconst props = propsOrClass\n\t\tcreateReactiveAccessors(obj, props)\n\t}\n\n\treturn obj\n}\n\nfunction isClass(obj: unknown): obj is AnyClass {\n\treturn typeof obj == 'function'\n}\n\n// Defines a reactive accessor on obj.\nfunction createReactiveAccessors(obj: ObjWithReactifiedProps, props: PropertyKey[]) {\n\tfor (const prop of props) {\n\t\tif (obj.__reactifiedProps__?.has(prop)) continue\n\n\t\tconst initialValue = obj[prop]\n\t\t_reactive(obj, prop)\n\t\tobj[prop] = initialValue\n\t}\n}\n\ntype Obj<T = unknown> = Record<PropertyKey, T> & {constructor: AnyClass}\ntype ObjWithReactifiedProps<T = unknown> = Obj<T> & {__reactifiedProps__?: Set<PropertyKey>}\n\n/**\n * Allow two reactive variables to depend on each other's values, without\n * causing an infinite loop.\n */\nexport function circular<Type>(\n\tfirst: VariableGetter<Type>,\n\tsetFirst: (v: Type) => void,\n\tsecond: VariableGetter<Type>,\n\tsetSecond: (v: Type) => void,\n): StopFunction {\n\tlet initial = true\n\n\tconst stop1 = autorun(() => {\n\t\tconst v = first()\n\t\tif (initial && !(initial = false)) setSecond(v)\n\t\telse initial = true\n\t})\n\n\tconst stop2 = autorun(() => {\n\t\tconst v = second()\n\t\tif (initial && !(initial = false)) setFirst(v)\n\t\telse initial = true\n\t})\n\n\treturn function stop() {\n\t\tstop1()\n\t\tstop2()\n\t}\n}\n\nexport const version = '0.9.0'\n","import type {Element as LumeElement} from './LumeElement.js'\nimport type {Constructor} from 'lowclass'\nimport {camelCaseToDash, defineProp} from './_utils.js'\n\n/**\n * A property or accessor decorator that maps an HTML attribute with the\n * dash-case version of the property, to the property. For example, if the\n * attribute decorator is used on a property called firstName, then the\n * property will be mapped to an attribute called first-name. Any time that the\n * attribute value changes (f.e. with setAttribute), then the property will\n * have this value set onto it.\n */\nexport function attribute(prototype: any, propName: string, descriptor?: PropertyDescriptor): any\nexport function attribute(handler?: AttributeHandler): (proto: any, propName: string) => any\nexport function attribute(handlerOrProto?: any, propName?: string, descriptor?: PropertyDescriptor): any {\n\t// This is true only if we're using the decorator in a Babel-compiled app\n\t// with non-legacy decorators. TypeScript only has legacy decorators.\n\tconst isDecoratorV2 = handlerOrProto && 'kind' in handlerOrProto\n\n\tif (isDecoratorV2) {\n\t\tconst classElement = handlerOrProto\n\n\t\treturn {\n\t\t\t...classElement,\n\t\t\tfinisher(Class: Constructor) {\n\t\t\t\t_attribute(Class.prototype, classElement.key)\n\t\t\t\t// return classElement.finisher?.(Class) ?? Class\n\t\t\t\treturn (classElement.finisher && classElement.finisher(Class)) ?? Class\n\t\t\t},\n\t\t}\n\t}\n\n\tif (handlerOrProto && propName) {\n\t\t// if being used as a legacy decorator directly\n\t\tconst prototype = handlerOrProto\n\t\treturn _attribute(prototype, propName, descriptor)\n\t}\n\n\t// `attribute` is being used as a decorator factory, possibly being passed a\n\t// handler, like `@attribute({...})`\n\n\tconst handler = handlerOrProto\n\n\treturn (protoOrClassElement: any, propName?: string, descriptor?: PropertyDescriptor): any => {\n\t\t// This is true only if we're using the decorator in a Babel-compiled app\n\t\t// with non-legacy decorators. TypeScript only has legacy decorators.\n\t\tconst isDecoratorV2 = protoOrClassElement && 'kind' in protoOrClassElement\n\n\t\tif (isDecoratorV2) {\n\t\t\tconst classElement = protoOrClassElement\n\n\t\t\treturn {\n\t\t\t\t...classElement,\n\t\t\t\tfinisher(Class: Constructor) {\n\t\t\t\t\t_attribute(Class.prototype, classElement.key, undefined, handler)\n\t\t\t\t\t// return classElement.finisher?.(Class) ?? Class\n\t\t\t\t\treturn (classElement.finisher && classElement.finisher(Class)) ?? Class\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t\treturn _attribute(protoOrClassElement, propName!, descriptor, handler)\n\t}\n}\n\n// TODO Do similar as with the following attributeChangedCallback prototype\n// patch, but also with (dis)connected callbacks which can call an instance's\n// template method, so users don't have to extend from the LumeElement base class.\n// Extending from the LumeElement base class will be the method that non-decorator\n// users must use.\n\nexport function _attribute(\n\tprototype: any,\n\tpropName: string,\n\tdescriptor?: PropertyDescriptor,\n\tattributeHandler?: AttributeHandler,\n): any {\n\tconst ctor = prototype.constructor as typeof LumeElement & {__proto__: any}\n\n\tif (!ctor.observedAttributes || !ctor.hasOwnProperty('observedAttributes')) {\n\t\tconst inheritedAttrs = ctor.__proto__.observedAttributes\n\n\t\t// @prod-prune\n\t\tif (inheritedAttrs && !Array.isArray(inheritedAttrs)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'observedAttributes is in the wrong format. Maybe you forgot to decorate your custom element class with the `element` decorator.',\n\t\t\t)\n\t\t}\n\n\t\tdefineProp(ctor, 'observedAttributes', [...(inheritedAttrs || [])])\n\t}\n\n\t// @prod-prune\n\tif (!Array.isArray(ctor.observedAttributes)) {\n\t\tthrow new TypeError(\n\t\t\t'observedAttributes is in the wrong format. Maybe you forgot to decorate your custom element class with the `element` decorator.',\n\t\t)\n\t}\n\n\tconst attrName = camelCaseToDash(propName)\n\n\tif (!ctor.observedAttributes!.includes(attrName)) ctor.observedAttributes!.push(attrName)\n\n\tif (!ctor.reactiveProperties || !ctor.hasOwnProperty('reactiveProperties'))\n\t\tdefineProp(ctor, 'reactiveProperties', [...(ctor.reactiveProperties || [])])\n\n\tif (!ctor.reactiveProperties!.includes(propName)) ctor.reactiveProperties!.push(propName)\n\n\tmapAttributeToProp(prototype, attrName, propName, attributeHandler)\n\n\tif (descriptor) return descriptor\n}\n\n// TODO this stores attributes as an inheritance chain on the constructor. It'd\n// be more fool-proof (not publicly exposed) to store attribute-prop mappings in\n// WeakMaps, but then we'd need to implement our own inheritance\n// (prototype-like) lookup for the attributes.\nfunction mapAttributeToProp(prototype: any, attr: string, prop: string, handler?: AttributeHandler): void {\n\tif (!prototype.__hasAttributeChangedCallback) {\n\t\tprototype.__hasAttributeChangedCallback = true\n\n\t\tconst originalAttrChanged = prototype.attributeChangedCallback\n\n\t\tprototype.attributeChangedCallback = function (attr: string, oldVal: string | null, newVal: string | null) {\n\t\t\t// If the class already has an attributeChangedCallback, let is run,\n\t\t\t// and let is call or not call super.attributeChangedCallback.\n\t\t\tif (originalAttrChanged) {\n\t\t\t\toriginalAttrChanged.call(this, attr, oldVal, newVal)\n\t\t\t}\n\t\t\t// Otherwise, let's not intentionally break inheritance and be sure\n\t\t\t// we call the super method (if it exists).\n\t\t\telse {\n\t\t\t\t// This is equivalent to `super.attributeChangedCallback?()`\n\t\t\t\tprototype.__proto__?.attributeChangedCallback?.call(this, attr, oldVal, newVal)\n\t\t\t\t// prototype.__proto__ &&\n\t\t\t\t// \tprototype.__proto__.attributeChangedCallback &&\n\t\t\t\t// \tprototype.__proto__.attributeChangedCallback.call(this, attr, oldVal, newVal)\n\t\t\t}\n\n\t\t\t// map from attribute to property\n\t\t\tconst prop = this.__attributesToProps && this.__attributesToProps[attr]\n\n\t\t\tif (prop) {\n\t\t\t\tconst handler = prop.attributeHandler\n\t\t\t\tthis[prop.name] = handler && handler.from ? handler.from(newVal) : newVal\n\t\t\t}\n\t\t}\n\t}\n\t// Extend the current prototype's __attributesToProps object from the super\n\t// prototypes __attributesToProps object.\n\tif (!prototype.hasOwnProperty('__attributesToProps')) {\n\t\t// using defineProperty so that it is non-writable, non-enumerable, non-configurable\n\t\tObject.defineProperty(prototype, '__attributesToProps', {\n\t\t\tvalue: {\n\t\t\t\t__proto__: prototype.__attributesToProps || Object.prototype,\n\t\t\t},\n\t\t})\n\t}\n\n\t// TODO throw helpful warning if overriding an already-existing attribute-prop mapping\n\tif (prototype.__attributesToProps![attr]) {\n\t\tconsole.warn(\n\t\t\t'The `@attribute` decorator is overriding an already-existing attribute-to-property mapping for the \"' +\n\t\t\t\tattr +\n\t\t\t\t'\" attribute.',\n\t\t)\n\t}\n\n\tprototype.__attributesToProps![attr] = {name: prop, attributeHandler: handler}\n}\n\n// TODO We need a way for the default value to be set from class\n// fields/properties initial values, instead of having to have them supplied to the\n// decorator. But at the moment, these attribute decorators do not create\n// accessors, so in a legacy decorator environment they have no way of seeing\n// the initial values (new decorators can supply initializers). So for legacy\n// decorators we need either a way to hook onto initial sets of @reactive\n// accessors during construction, or to define @attribute's own accessors. New\n// decorators can easily use initializers. Our test setup will ensure that the\n// decorators work in all decorator environments.\n\nexport type AttributeHandler<T = any> = {\n\t// TODO `to` handler currently does nothing. If it is present, then prop\n\t// changes should reflect back to the attribute. In most cases, this is\n\t// undesirable (for performance).\n\tto?: (propValue: T) => string | null\n\tfrom?: (AttributeValue: string | null) => T\n\tdefault?: T\n}\n\ntype AttributeType<T> = (defaultValue?: T) => AttributeHandler<T>\n\nattribute.string = ((def = '') => ({\n\tdefault: def,\n\tfrom(str) {\n\t\treturn str == null ? this.default : str\n\t},\n})) as AttributeType<string>\n\nexport function stringAttribute(defaultValue = '') {\n\treturn attribute(attribute.string(defaultValue))\n}\n\nattribute.number = ((def = 0) => ({\n\tdefault: def,\n\tfrom(str) {\n\t\treturn str == null ? this.default : +str\n\t},\n})) as AttributeType<number>\n\nexport function numberAttribute(defaultValue = 0) {\n\treturn attribute(attribute.number(defaultValue))\n}\n\nattribute.boolean = ((def = false) => ({\n\tdefault: def,\n\tfrom(str) {\n\t\treturn str == null ? this.default : str !== 'false'\n\t},\n})) as AttributeType<boolean>\n\nexport function booleanAttribute(defaultValue = false) {\n\treturn attribute(attribute.boolean(defaultValue))\n}\n","import {reactive} from './variable.js'\nimport {Element} from './LumeElement.js'\nimport {_attribute} from './attribute.js'\n\nimport type {Constructor} from 'lowclass'\nimport type {AttributeHandler} from './attribute.js'\n\ntype PossibleStatics = {\n\tobservedAttributes?: string[] | Record<string, AttributeHandler>\n\treactiveProperties?: string[]\n\telementName?: string\n}\ntype ElementCtor = Constructor<HTMLElement>\n\n/**\n * A class decorator that defines the target class as a custom element with the\n * given `tagName`. The `tagName` must contain a hyphen, as per standard Custom\n * Element rules.\n *\n * If called with a name, it defines a custom element with that name automatically:\n *\n * ```js\n * \\@element('cool-element')\n * class CoolElement extends HTMLElement {\n *   // ...\n * }\n *\n * document.body.append(document.createElement('cool-element'))\n * ```\n *\n * If called the second arg set to false, then the element definition should be manually triggered:\n *\n * ```js\n * \\@element('cool-element', false)\n * class CoolElement extends HTMLElement {\n *   // ...\n * }\n *\n * // Using the class's default name:\n * CoolElement.defineElement()\n *\n * // Or using a different name:\n * CoolElement.defineElement('awesome-element')\n *\n * document.body.append(document.createElement('cool-element'))\n * ```\n *\n * Sometimes you may not want to define a name for the element,\n * however the decorator is still needed for key functionality. In\n * this case use the decorator without a calling it first, then you can\n * manually define the element in any other way as needed later:\n *\n * ```js\n * \\@element\n * class CoolElement extends HTMLElement {\n *   // ...\n * }\n *\n * // ...Manually define it at some point after making the class...\n * CoolElement.defineElement('cool-element')\n *\n * // Or:\n * customElements.define('cool-element', CoolElement)\n *\n * // But not the following (runtime error due to no name being defined):\n * CoolElement.defineElement()\n *\n * document.body.append(document.createElement('cool-element'))\n * ```\n *\n * If you call it with an empty string, it behaves the same as the previous example:\n *\n * ```js\n * \\@element('')\n * class CoolElement extends HTMLElement {...}\n *\n * // is the same as\n *\n * \\@element\n * class CoolElement extends HTMLElement {...}\n * ```\n */\nexport function element(tagName: string, autoDefine?: boolean): <T extends ElementCtor>(Class: T) => T\nexport function element<T extends ElementCtor>(Class: T): T\nexport function element(tagNameOrClassOrClassElement: string | ElementCtor, autoDefine = true): any {\n\tlet tagName = ''\n\n\t// `@element('foo-bar') class MyEl ...` or `element('my-el')(class MyEl ...)`\n\tif (typeof tagNameOrClassOrClassElement === 'string') {\n\t\ttagName = tagNameOrClassOrClassElement\n\t\treturn elementDecorator.bind(null, tagName, autoDefine)\n\t}\n\n\t// Otherwise `@element class MyEl ...` or `element(class MyEl ...)`\n\tautoDefine = false\n\tconst classOrClassElement = tagNameOrClassOrClassElement\n\treturn elementDecorator(tagName, autoDefine, classOrClassElement)\n}\n\nfunction elementDecorator(tagName: string, autoDefine: boolean, classOrClassElement: ElementCtor | {kind: any}): any {\n\t// Newer v2 decorator (used in a Babel environment, no other tool supports them currently).\n\tif ('kind' in classOrClassElement) {\n\t\tconst classElement = classOrClassElement\n\t\treturn {...classElement, finisher: elementFinisher.bind(null, tagName, autoDefine)}\n\t}\n\n\t// Legacy v1 decorator\n\tconst Class = classOrClassElement\n\treturn elementFinisher(tagName, autoDefine, Class)\n}\n\nfunction elementFinisher<C extends ElementCtor>(tagName: string, autoDefine: boolean, Class: C & PossibleStatics): C {\n\tconst attrs = Class.observedAttributes\n\n\tif (Class.hasOwnProperty('elementName')) tagName = Class.elementName || tagName\n\telse Class.elementName = tagName\n\n\tif (Array.isArray(attrs)) {\n\t\t// Nothing to do here: either the user provided a regular\n\t\t// observedAttributes array like with plain Custom Elements, or\n\t\t// they used our decorators which happen to create the array for\n\t\t// them. Either way, the take it from here with the array.\n\t} else if (attrs && typeof attrs === 'object') {\n\t\t// When we're not using decorators, our users have the option to\n\t\t// provide an observedAttributes object (insetad of the usual\n\t\t// array) to specify attribute types. In this case, we need to\n\t\t// track the types, and convert observedAttributes to an array so\n\t\t// the browser will understand it like usual.\n\n\t\t// Delete it, so that it will be re-created as an array by the\n\t\t// following _attribute calls.\n\t\tClass.observedAttributes = undefined\n\n\t\t// This also adds the props to Class.reactiveProperties.\n\t\tfor (const prop in attrs) _attribute(Class.prototype, prop, undefined, attrs[prop])\n\t}\n\n\tClass = reactive(Class)\n\n\tclass ElementDecoratorFinisher extends Class {\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(...args)\n\t\t\thandlePreUpgradeValues(this)\n\t\t}\n\t}\n\n\t// FIXME With autoDefineElements true, this won't work,\n\tif (tagName && autoDefine) customElements.define(tagName, ElementDecoratorFinisher)\n\t// but this will. Presumably because then all elements are defined after all behaviors.\n\t// if (tagName && autoDefine) Promise.resolve().then(() => customElements.define(tagName, ElementDecoratorFinisher))\n\n\treturn ElementDecoratorFinisher\n}\n\nfunction handlePreUpgradeValues(self: HTMLElement) {\n\tif (!(self instanceof Element)) return\n\n\t// @ts-ignore, protected access is ok\n\tfor (const [key, value] of self._preUpgradeValues) {\n\t\t// If the key is missing, it has already been handled, continue.\n\t\tif (!(key in self)) {\n\t\t\tcontinue\n\t\t}\n\n\t\t// Untrack the pre-upgrade value so that a subclass\n\t\t// of this class won't re-run this same logic again.\n\t\t// TODO needs testing.\n\t\t// @ts-ignore, protected access is ok\n\t\tself._preUpgradeValues.delete(key)\n\n\t\t// Unshadow any possible inherited accessor only if\n\t\t// there is not an accessor. If there is an accessor it\n\t\t// handles inheritance its own way.\n\t\tconst desc = Object.getOwnPropertyDescriptor(self, key)\n\t\tif (desc && 'value' in desc) {\n\t\t\t// @ts-expect-error dynamic decorator stuff, has no impact on user types.\n\t\t\tdelete self[key]\n\t\t}\n\n\t\t// Set the pre-upgrade value (allowing any inherited\n\t\t// accessor to operate on it).\n\t\t// @ts-expect-error dynamic decorator stuff, has no impact on user types.\n\t\tself[key] = value\n\t}\n}\n","import {identityTemplateTag} from './_utils.js'\n\n/**\n * A no-op (identity) template tag that does nothing, useful merely for marking CSS strings for syntax\n * highlighting in various text editors. For example:\n *\n * ```js\n * const style = css`\n *   .el {\n *     background: skyblue;\n *   }\n * `\n * ```\n */\nexport const css = identityTemplateTag\n","export * from './LumeElement.js'\nexport * from './variable.js'\nexport * from './attribute.js'\nexport * from './element.js'\nexport * from './css.js'\nexport type {JSX} from './jsx-runtime.js'\n\nexport const version = '0.9.0'\n"],"names":["supportsSpread","isSyntaxSupported","supportsClass","supportsNewTarget","TRUE_CONSTRUCTOR","Symbol","setPrototype","Object","setPrototypeOf","object","newPrototype","__proto__","construct","Reflect","Function","instantiator","constructor","args","target","arguments","length","TypeError","prototype","instance","value","apply","SKIP_PROPERTIES","copyProperties","source","destination","getOwnPropertyNames","defineProperty","properties","getOwnPropertySymbols","concat","i","indexOf","getOwnPropertyDescriptor","property","newless","name","usesClassSyntax","toString","substr","requiresNew","newlessConstructor","this","returnValue","error","test","message","Error","create","Node","console","newTarget","hasNewTarget","eval","code","getFunctionBody","setDescriptor","example","useStrict","WeakTwoWayMap","m","WeakMap","set","a","b","get","item","has","fn","split","shift","pop","join","descriptorDefaults","enumerable","configurable","obj","key","newDescriptor","inherited","overrideDescriptor","getInheritedDescriptor","setDescriptors","newDescriptors","currentDescriptor","currentDescriptors","getOwnPropertyDescriptors","defineProperties","oldDescriptor","writable","propertyIsAccessor","descriptor","result","currentProto","owner","getInheritedPropertyNames","keys","Array","from","Set","hasPrototype","proto","copyDescriptors","mod","props","prop","setDefaultPrototypeDescriptors","defaultClassDescriptor","descriptors","setDefaultStaticDescriptors","Ctor","staticBlacklist","includes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","hasOwnProperty","call","r","toStringTag","signalOptions","equals","ERROR","runEffects","runQueue","NOTPENDING","STALE","PENDING","UNOWNED","owned","cleanups","context","transPending","setTransPending","Owner","SuspenseContext","Transition","Scheduler","ExternalSourceFactory","Listener","Pending","Updates","Effects","ExecCount","options","assign","s","observers","observerSlots","pending","comparator","readSignal","bind","running","sources","tValue","writeSignal","c","createComputation","push","updateComputation","tState","batch","q","runUpdates","data","listener","children","resolveChildren","runningTransition","state","updates","lookUpstream","sSlot","sourceSlots","node","isComp","TransitionRunning","add","disposed","pure","markDownstream","cleanNode","time","runComputation","queueMicrotask","nextValue","err","handleError","updatedAt","init","tOwned","track","trigger","ordinary","dispose","triggerInTransition","done","l","Promise","resolve","then","t","effects","promises","queue","res","startTransition","inTransition","x","runTop","suspense","inFallback","ancestors","top","prev","wait","tasks","delete","size","scheduleQueue","e","v","len","completeUpdates","ignore","index","obs","n","fns","lookup","f","isArray","results","createProvider","id","createComputed","render","element","disposer","detachedOwner","unowned","root","updateFn","document","parent","accessor","marker","initial","insertExpression","current","insert","firstChild","textContent","unwrapArray","childNodes","multi","parentNode","nodeType","createTextNode","cleanChildren","array","currentArray","normalizeIncomingArray","appendNodes","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","remove","Map","sequence","replaceChild","reconcileArrays","appendChild","normalized","unwrap","dynamic","String","replacement","inserted","el","isParent","defineProp","defaultValue","createContext","ctor","HTMLElement","globalThis","LumeElement","___init___","__handleInitialPropertyValuesIfAny","hasShadow","__root","__styleRootNode","hostSelector","__id","__elementId","__dynamicStyle","defineElement","registry","customElements","warn","Class","elementName","define","preUpgradeKeys","_preUpgradeValues","propName","func","__propsSetAtLeastOnce__","inheritsProperty","hasReactifiedProp","__reactifiedProps__","shadowRoot","attachShadow","mode","styleRoot","super","connectedCallback","__setStyle","template","__dispose","disconnectedCallback","__cleanupStyle","staticCSS","css","instanceCSS","staticStyle","createElement","innerHTML","rootNode","getRootNode","head","refCountPerTagName","__styleRootNodeRefCountPerTagName","refCount","tagName","toLowerCase","replaceAll","setAttribute","instanceStyle","style","querySelector","adoptedCallback","publicProtoToProtectedProto","publicProtoToPrivateProto","publicToProtected","privateInstanceToClassScope","brandToPublicPrototypes","brandToProtectedPrototypes","brandToPrivatePrototypes","brandToPublicsPrivates","defaultOptions","nativeNaming","prototypeWritable","setClassDescriptors","InvalidSuperAccessError","InvalidAccessError","getPublicMembers","scope","cachedPublicAccesses","isPrivateInstance","getSubclassScope","publicToPrivate","isProtectedInstance","getProtectedMembers","cachedProtectedAccesses","isPublicInstance","createProtectedInstance","publicInstance","privateInstance","protectedPrototype","findLeafmostProtectedPrototype","protectedInstance","getPrivateMembers","cachedPrivateAccesses","createPrivateInstance","privatePrototype","brandedCheck","publicPrototype","classBrand","superHelper","supers","parentPublicPrototype","parentProtectedPrototype","parentPrivatePrototype","getSuperHelperObject","parentPrototype","_super","getter","setter","ImplementationMethod","usingStaticSubclassMethod","definer","createClass","extends","ParentClass","def","brand","className","scopedPublicsToPrivates","Super","Public","Protected","Private","staticMembers","customClass","static","public","protected","private","parentProtectedProto","currentPublicProto","getParentProtectedPrototype","parentPrivateProto","getParentPrivatePrototype","userConstructor","NewClass","ret","createClassHelper","PROXIES_ON_INSTANCE_AND_PROTOTYPE","userLength","user","resume","readVariable","writeVariable","variable","iterator","autorun","stop","reactive","protoOrClassElement","_descriptor","classElement","kind","finisher","reactiveClassFinisher","_trackReactiveProperty","reactiveProperties","self","reactify","__isReactive__","_reactive","vName","originalGet","originalSet","initialValue","__getReactiveVar","newValue","propsOrClass","isClass","createReactiveAccessors","circular","first","setFirst","second","setSecond","stop1","stop2","attribute","handlerOrProto","_attribute","handler","attributeHandler","observedAttributes","inheritedAttrs","attrName","replace","attr","__hasAttributeChangedCallback","originalAttrChanged","attributeChangedCallback","oldVal","newVal","__attributesToProps","mapAttributeToProp","stringAttribute","string","numberAttribute","number","booleanAttribute","boolean","tagNameOrClassOrClassElement","autoDefine","elementDecorator","classOrClassElement","elementFinisher","attrs","ElementDecoratorFinisher","desc","handlePreUpgradeValues","default","str","stringsParts","values"],"sourceRoot":""}